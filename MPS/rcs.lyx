#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 220
\textclass book
\language french
\inputencoding latin1
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize letterpaper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Standard

Un problème majeur dans le développement et la maintenance des programmes
 est le contrôle de version.
 C'est-à-dire la conservation bien organisée de tous les changements effectués
 sur les programmes développés.
 Au final, un programme est constitué de différentes versions.
\layout Standard

L'un des programmes standard pour faire du contrôle de version est GNU's
 
\series bold 
RCS
\series default 
, qui signifie 
\shape italic 
Revision Control System
\shape default 
.
\layout Standard

RCS est un ensemble de commandes effectuant ce travail.
 Il automatise le stockage, la récupération, la tenue d'un journal et l'identifi
cation des différentes révisions de fichiers de différents types (texte
 de n'importe quel format, et même binaire si les outils associés, tel que
 
\family typewriter 
diff
\family default 
, peuvent gérer ce type de fichiers).
 Cependant, la principale utilisation d'un système de contrôle de version
 s'inscrit dans le cadre de fichiers sources ou de documentations.
\layout Standard

RCS ne conserve pas une copie entière de chaque nouvelle version.
 Il stocke des 
\shape italic 
deltas
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, c'est à dire les différences entre les révisions successives.
 Pour cela, les changements au fichier 
\shape italic 
filename
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 sont conservés dans le fichier 
\shape italic 
filename,v
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
\layout Standard

Parmi les principales caractéristiques de RCS, on peut noter qu'il permet
 d'extraire une version antérieure des fichiers, de conserver des journaux
 des modifications apportées, de conserver l'identification des personnes
 ayant fait les modifications.
 RCS permet également de comparer deux versions et fournit un mécanisme
 pour fusionner deux branches de développement différentes d'un fichier.
 RCS permet également le verrouillage (
\shape italic 
lock
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
) d'un fichier, de telle façon qu'une seule personne puisse apporter des
 changements (les autres personnes peuvent toujours utiliser le fichier,
 par exemple pour le compiler).
\layout Standard

Notons qu'il existe d'autres outils de ce type.
\layout Subsection

Principe général
\layout Standard

La fonction principale de RCS est de gérer des 
\shape italic 
groupes de révisions
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 On peut définir une révision comme un ensemble de textes appelés révisions,
 qui évoluent les uns après les autres.
\layout Standard

Une nouvelle révision est créée en éditant une révision actuelle.
 La révision initiale est la racine de l'arbre des révisions.
 En effet, RCS organise les révisions en un arbre ancestral.
 La révision initiale de l'arbre (la racine) est normalement numérotée 1.1
 et les révisions successives sont numérotées 1.2, 1.3, 1.4 ...
 Le premier champ du numéro de révision est appelé le 
\shape italic 
release number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, et le second champ est appelé le 
\shape italic 
level number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
\layout Standard

RCS assigne un nouveau numéro de révision en incrémentant le 
\shape italic 
level number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 de la révision précédente.
 Le 
\shape italic 
release number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 doit être incrémenté explicitement (uniquement dans le cas d'une transition
 majeure dans le développement, par exemple lorsqu'une nouvelle release
 du produit a été complétée).
\layout Subsection

Commandes de base
\layout Standard

L'interface de RCS est relativement simple et seulement deux commandes sont
 suffisantes dans la plupart des cas : 
\family typewriter 
ci
\family default 
 et 
\family typewriter 
co
\family default 
.
\layout Standard

Nous supposons l'existence d'un fichier nommé 
\family typewriter 
foo.c
\family default 
.
 Le source du fichier est le suivant : 
\begin_inset ERT
status Open

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
#include <stdio.h>
\newline 

\newline 
main()
\newline 
{ 
\newline 
  printf("Hello world
\backslash 
n");
\newline 
}
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Nous allons créer un nouveau groupe de révisions avec 
\family typewriter 
foo.c
\family default 
 comme révision initiale (1.1).
 Le groupe sera stocké dans le fichier nommé 
\family typewriter 
foo.c,v
\family default 
.
 Par défaut, le fichier 
\family typewriter 
foo.c
\family default 
 sera effacé.
 Pour cela, nous utilisons la commande de 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
:
\layout Standard


\begin_inset ERT
status Open

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
 ci foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Cette commande demande également une description pour le groupe.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
foo.c,v <-- foo.c enter description, terminated with single '.' or end of file:
\newline 
NOTE: This is NOT the log message!
\newline 
>>
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Par exemple, nous tapons :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
>> programme hello world.
\newline 
>> .
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Le texte décrit ce que le programme fait, et 
\family typewriter 
ci
\family default 
 rappelle que ce n'est pas une entrée dans le journal.
 Les commandes 
\family typewriter 
ci
\family default 
 ultérieures demanderont une entrée du journal, laquelle résumera les modificati
ons apportées.
 Ces messages doivent être brefs, décrivant les changements apportés.
\layout Standard

Pour extraire la dernière révision dans un groupe, on utilise la commande
 de 
\shape italic 
check-out
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
 co foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Le fichier 
\family typewriter 
foo.c
\family default 
 est recréé, mais en lecture seule.
 On peut utiliser le fichier pour le compiler par exemple.
 En effet, pour installer un logiciel, on extrait toutes les sources en
 lecture seule, on les compile et on efface les sources.
\layout Standard

Pour pouvoir modifier le fichier 
\family typewriter 
foo.c
\family default 
, nous devons utiliser l'option 
\family typewriter 
-l
\family default 
 :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
 co -l foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Cela permet d'extraire le fichier 
\family typewriter 
foo.c
\family default 
 mais en posant un verrou sur le fichier.
 Cela signifie que vous, et vous seul, avez la permission de faire un 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 sur une nouvelle révision du fichier (ce qui est nécessaire dans le cas
 où plusieurs personnes travaillent sur un même groupe de révisions).
 Le fichier 
\family typewriter 
foo.c
\family default 
 en alors en écriture pour vous.
\layout Standard

Le système peut être configuré avec la caractéristique du 'strict locking'.
 Tous les fichiers RCS sont initialisés de telle sorte que les opérations
 de 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 nécessitent un verrou sur la révision précédente.
\layout Standard

Pour désactiver le 
\shape italic 
strict locking
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 sur un fichier individuel, utilisez la commande :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 
 
\newline 

\backslash 
begin{verbatim}
\newline 
 rcs -U foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Pour activer le 
\shape italic 
strict locking
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 sur un fichier individuel, utilisez la commande :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 
 
\newline 

\backslash 
begin{verbatim}
\newline 
 rcs -L foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

La notion de 
\shape italic 
locking
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 est abordée dans un chapitre ultérieur.
\layout Standard

Nous pouvons alors éditer le fichier 
\family typewriter 
foo.c
\family default 
, et une fois les modifications effectuées, en faire une nouvelle révision
 par la commande:
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
 ci foo.c 
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

La commande nous demande alors le message du journal :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
foo.c,v <-- foo.c
\newline 
new revision: 1.2; previous revision: 1.1
\newline 
enter log message, terminated with single '.' or end of file:
\newline 
>> Affichage 10 fois du message
\newline 
>> .
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

La nouvelle révision est la 1.2.
\layout Standard

Si vous obtenez lors du ci, le message d'erreur suivant (en supposant que
 le login de l'utilisateur soit 
\shape italic 
mad
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
):
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
ci error: no lock set by mad
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

c'est que vous avez oublié de verrouiller la révision lors du 
\family typewriter 
co
\family default 
.
\layout Standard

On peut noter, que pour des raisons pratiques, tous les fichiers RCS (*,v)
 peuvent être déplacés dans un sous-répertoire nommé 
\family typewriter 
RCS
\family default 
.
 Donc, prenez l'habitude de créer ce répertoire avant de commencer à créer
 vos révisions.
 RCS l'utilisera automatiquement.
\layout Standard

Si vous ne désirez pas effacer le fichier de travail lors du 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, vous devez utiliser soit l'option 
\family typewriter 
-l
\family default 
, qui entraîne un 
\shape italic 
locking
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, soit l'option 
\family typewriter 
-u
\family default 
 qui n'entraîne pas de locking (ces options entraînent un appel à la commande
 
\family typewriter 
co
\family default 
):
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
ci -l foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Les commandes 
\family typewriter 
ci
\family default 
 et 
\family typewriter 
co
\family default 
 sont les deux commandes de bases de RCS.
\layout Subsection

Identification automatique
\layout Standard

Avec RCS, vous pouvez marquer vos fichiers sources et objets par des chaines
 d'identification spéciales.
 RCS utilise pour ça la substitution de mots-clés.
 Par exemple, pour obtenir l'identification, placez le mot-clé suivant dans
 le texte d'une révision (par exemple dans un commentaire en C): 
\family typewriter 
$Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $
\family default 
.
\layout Standard

La commande 
\family typewriter 
co
\family default 
 remplacera ce mot-clé avec une chaine de la forme : 
\family typewriter 
$Id filename revisionnumber date time author state locker$
\family default 
.
 Cette chaine décrit le nom du fichier, la révision, la date et l'heure
 du 
\shape italic 
check-out
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, l'auteur, l'état (par exemple, 
\shape italic 
Exp
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 pour expérimental) et celui qui verrouille le fichier.
 Cette chaine sera mise à jour automatiquement à chaque fois.
\layout Standard

Pour obtenir la même chose dans les fichiers objets, utilisez une chaine
 littérale de caractères, par exemple en C : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
static char rcsid[]="$Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $";
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Cette possibilité est très importante pour la maintenance des programmes.
 Ainsi, la commande 
\family typewriter 
ident
\family default 
 extrait ces mots-clés à partir de n'importe quel fichier (donc les fichiers
 objets).
 Cela permet de retrouver quelles révisions de quels modules ont été utilisées
 pour construire le programme.
\layout Standard

Il existe d'autres mots-clés d'identification (
\family typewriter 
$Author: pfares $, $Date: 2003/01/23 23:45:42 $, $Header: /usr/local/cvsroot/MPS/rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $, $Locker:  $ ,$Name:  $ ,$RCSfile: rcs.lyx,v $, $Revision: 1.1.1.1 $, $Source: /usr/local/cvsroot/MPS/rcs.lyx,v $,
 $State: Exp $
\family default 
, voir la page de manuel de 
\family typewriter 
co
\family default 
).
 Un mot-clé important est 
\family typewriter 
$Log: rcs.lyx,v $
Revision 1.1.1.1  2003/01/23 23:45:42  pfares
pportable

\family default 
.
 Son fonctionnement est un peu différent, il permet d'accumuler les messages
 du journal saisis lors du processus de 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 On utilise ce mot-clé dans un commentaire en début de fichier source.
 Ainsi le fichier source est auto-documenté.
\layout Standard

Prenons un exemple concret, voilà le début du fichier 
\family typewriter 
foo.c
\family default 
 lors de sa création : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
/*
\newline 
 * $Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $
\newline 
 *
\newline 
 * $Log: rcs.lyx,v $
 * Revision 1.1.1.1  2003/01/23 23:45:42  pfares
 * pportable
 *
\newline 
 *
\newline 
 */
\newline 

\newline 
static char rcsid[] = "$Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $";
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Lorsque nous extrayons la révision 1.2, nous obtenons en début du fichier
 foo.c : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
/*
\newline 
 * $Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $
\newline 
 *
\newline 
 * $Log: rcs.lyx,v $
 * Revision 1.1.1.1  2003/01/23 23:45:42  pfares
 * pportable
 *
\newline 
 * Revision 1.2  1997/08/23 20:33:36  mad
\newline 
 * Affichage 10 fois du message
\newline 
 *
\newline 
 * Revision 1.1  1997/08/23 20:33:05  mad
\newline 
 * Initial revision
\newline 
 *
\newline 
 *
\newline 
 */
\newline 

\newline 
static char rcsid[] = "$Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $";
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Si nous compilons 
\family typewriter 
foo.c
\family default 
 pour obtenir 
\family typewriter 
a.out
\family default 
, et que nous utilisons la commande : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
ident a.out
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

nous obtenons : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
a.out: $Id: rcs.lyx,v 1.1.1.1 2003/01/23 23:45:42 pfares Exp $
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Ce qui nous permet de savoir que le fichier 
\family typewriter 
a.out
\family default 
 a été obtenu à partir de la révision 1.2 de 
\family typewriter 
foo.c
\family default 
.
\layout Subsection

Verrouillage (
\shape italic 
locking
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
)
\layout Standard

Le problème posé est le suivant : au moins deux personnes veulent déposer
 des modifications d'une même révision.
 Si nous supposons deux programmeurs apportant des modifications à une même
 révision (par exemple la 2.5).
 Le programmeur A fait un 
\family typewriter 
ci
\family default 
 sur sa révision avant le programmeur B.
 Le programmeur B n'a pas vu les modifications de A, donc l'effet est que
 les changements de A sont couverts par les modifications de B.
\layout Standard

RCS prévient ce conflit par le verrouillage.
 Lorsque quelqu'un veut éditer une révision pour la modifier, la révision
 doit être extraite et verrouillée, en utilisant l'option 
\family typewriter 
-l
\family default 
 de 
\family typewriter 
co
\family default 
.
 La prochaine opération de 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 effacera le verrou.
 Au plus un programmeur à la fois peut verrouiller une révision, et seulement
 ce programmeur peut la déverrouiller.
\layout Standard

Par exemple, supposons que le programmeur 
\family typewriter 
mad
\family default 
 a mis un verrou par la commande 
\family typewriter 
co -l foo.c
\family default 
.
 Maintenant, si le programmeur 
\family typewriter 
gunsman
\family default 
 veut extraire la révision pour la modifier par la même commande, il aura
 le message d'erreur suivant : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
foo.c,v --> foo.c co: foo.c,v: Revision 1.2 is already locked by mad.
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

De plus, chaque fichier RCS possède également une liste d'accès, qui spécifie
 quels utilisateurs peuvent effectuer des opérations de mise à jour.
\layout Subsection

L'arbre de révision
\layout Standard

Nous avons vu que les numéros de révisions démarraient à 1.1 et, qu'ensuite,
 la commande 
\family typewriter 
ci
\family default 
 incrémentait uniquement le 
\shape italic 
level number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 Pour incrémenter le 
\shape italic 
release number
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 il faut le faire explicitement avec l'option 
\family typewriter 
-r
\family default 
 de 
\family typewriter 
ci
\family default 
, par exemple : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
ci -r2.1 foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

assigne le numéro 2.1 à la nouvelle révision.
 Un nouveau 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 donnera ensuite 2.2.
\layout Standard

Un arbre de révision est constitué normalement d'une branche unique appelée
 tronc.
 On peut néanmoins créer des branches latérales.
 Par exemple, supposons l'arbre de révision suivant : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
1.1 -> 1.2 -> 1.3 -> 1.4 -> 2.1 -> 2.2 -> 2.3 ...
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Cet arbre a 7 révisions groupées en 2 
\shape italic 
releases
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 La release 1.4 est en activité sur un site client, tandis que la 
\shape italic 
release
\begin_inset ERT
status Open

\layout Standard

\end_inset 


\shape default 
 2 est en développement.
\layout Standard

Imaginons maintenant que le client demande une correction dans la révision
 1.4.
 Nous allons alors créer une branche à la révision 1.4, et insérer les correction
s sur cette branche.
 La première branche démarrant à 1.4 est numérotée 1.4.1 et les révisions sur
 cette branche sont numérotées 1.4.1.1, 1.4.1.2, 1.4.1.3 ...
 Cette notation permet de créer d'autres branches à partir de 1.4.
 Les étapes nécessaires sont les suivantes :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
co -r1.4 foo.c
\newline 
editer foo.c pour apporter les corrections
\newline 
ci -r1.4.1 foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Nous obtenons alors l'arbre suivant : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
1.1 -> 1.2 -> 1.3 -> 1.4 -> 2.1 -> 2.2 -> 2.3 ...
\newline 
                       
\backslash 

\newline 
                        
\backslash 

\newline 
                         
\backslash 
> 1.4.1.1 -> ...
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Il peut être nécessaire d'incorporer les différences entre 1.4 et 1.4.1.1 dans
 une révision de la release 2.
 Pour cela, il faut utiliser la commande 
\family typewriter 
rcsmerge
\family default 
 qui automatise le processus.
\layout Standard

Une autre raison de créer une branche est liée au problème posé par un programme
ur ayant verrouillé une révision pour la modifier et qui n'a pas encore
 effectué le dépôt de ses modifications.
 Si un autre programmeur désire modifier cette révision, il ne peut pas
 le faire tant que le verrou n'est pas supprimé.
 La solution est de créer une branche, et ensuite, une fois que le premier
 programmeur a effectué son 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, utiliser la commande 
\family typewriter 
rcsmerge
\family default 
 pour incorporer les deux révisions.
\layout Subsection

Autres commandes utiles 
\layout Standard

La commande 
\shape italic 
rcsdiff
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 permet de comparer la version actuelle avec la plus récente version qui
 est sauvegardée : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
rcsdiff -u foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

L'option 
\family typewriter 
-u
\family default 
 de 
\family typewriter 
rcsdiff
\family default 
 permet d'utiliser un diff unifié (
\shape italic 
unified diff
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
).
 En fait, 
\family typewriter 
rcsdiff
\family default 
 accepte toutes les options que la commande 
\family typewriter 
diff
\family default 
 accepte.
 Par exemple, pour générer un 
\shape italic 
context diff
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, on utilisera l'option 
\family typewriter 
-c
\family default 
.
\layout Standard

Par exemple, nous extrayons la révision 1.2 de foo.c, nous effectuons une
 petite modification (correction d'un bug), et 
\family typewriter 
rcsdiff foo.c
\family default 
 nous donne: 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
===================================================================
\newline 
RCS file: foo.c,v
\newline 
retrieving revision 1.2
\newline 
diff -u -r1.2 foo.c
\newline 
--- foo.c       1997/08/23 20:33:36     1.2
\newline 
+++ foo.c       1997/08/24 20:36:20
\newline 
@@ -24,7 +24,7 @@
\newline 
 main()
\newline 
 {
\newline 
     int i = 0;
\newline 
-    for(i = 0; i <= 10; i++)
\newline 
+    for(i = 0; i < 10; i++)
\newline 
        printf("Hello world
\backslash 
n");
\newline 
     
\newline 
 }
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Les lignes qui n'ont pas été modifiées sont affichées avec une simple espace
 en début de ligne.
 Les lignes effacées dans la version la plus récente ont un 
\family typewriter 
-
\family default 
 en début de ligne, et les lignes qui ont été ajoutées ont un 
\family typewriter 
+
\family default 
 en début de ligne.
 Comme on peut le remarquer, les lignes modifiées sont considérées comme
 effacées dans l'ancienne version, et les changements sont considérés comme
 ajoutés dans la nouvelle.
 Dans le cas d'un 
\shape italic 
context diff
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, les lignes marquées avec un 
\family typewriter 
!
\family default 
 indiquent un changement, et les lignes marquées avec un 
\family typewriter 
+
\family default 
 indiquent des lignes ajoutées.
\layout Standard

On peut également comparer deux versions : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
rcsdiff -u -r1.2 -r1.4 foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Une utilisation de 
\family typewriter 
rcsdiff
\family default 
 est la génération de mises à jour appliquées par des 
\shape italic 
patch
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 Par exemple, une fois un programme terminé, effectuez un 
\shape italic 
check-in
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 sur tous les fichiers avec un nouveau numéro de release, par exemple 2.0.
 Puis, pour la release suivante (par exemple la 3.0), lancez 
\family typewriter 
rcsdiff
\family default 
 sur la révision 2.0 pour tous les fichiers : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
rcsdiff -c -r2.0 RCS/* > monprog-3.0.patch 2>&1
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Vous obtiendrez ainsi un fichier 
\shape italic 
patch
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
 que vous pourrez distribuer aux personnes possédant la version 2.0.
\layout Standard

Une autre possibilité intéressante est de consulter le journal des modifications
 effectuées.
 Pour cela on utilise la commande 
\family typewriter 
rlog
\family default 
, qui donne l'historique des changements effectués :
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 
rlog foo.c
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Ce qui nous donne : 
\begin_inset ERT
status Collapsed

\layout Standard

\newline 

\backslash 
begin{verbatim}
\newline 

\newline 
RCS file: foo.c,v
\newline 
Working file: foo.c
\newline 
head: 1.3
\newline 
branch:
\newline 
locks: strict
\newline 
        mad: 1.3
\newline 
access list:
\newline 
symbolic names:
\newline 
keyword substitution: kv
\newline 
total revisions: 3; selected revisions: 3
\newline 
description:
\newline 
programme hello world
\newline 
----------------------------
\newline 
revision 1.3
\newline 
date: 1997/08/23 20:36:20;  author: mad;  state: Exp;  lines: +6 -1
\newline 
Correction d'un petit bug
\newline 
----------------------------
\newline 
revision 1.2
\newline 
date: 1997/08/23 20:33:36;  author: mad;  state: Exp;  lines: +8 -3
\newline 
Affichage 10 fois du message
\newline 
----------------------------
\newline 
revision 1.1
\newline 
date: 1997/08/23 20:33:05;  author: mad;  state: Exp;
\newline 
Initial revision
\newline 
=============================================================================
\newline 

\backslash 
end{verbatim}
\newline 

\end_inset 


\layout Standard

Le plus intéressant ce sont les commentaires saisis lors d'un 
\family typewriter 
ci
\family default 
.
 Par exemple, on peut noter que pour la révision 1.3, le commentaire est
 
\shape italic 
Correction d'un petit bug
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
\layout Standard

A noter que les dates et heures sont en UTC, et non pas dans la zone locale.
 Cela permet à des développeurs de différentes zones géographiques de pouvoir
 collaborer.
\layout Standard

La commande 
\family typewriter 
rcs
\family default 
 est utilisée pour modifier l'état des fichiers RCS.
 Par exemple, pour bloquer un fichier qui ne l'est pas ou pour casser un
 verrou.
\layout Section

Ce que ne fait pas RCS
\layout Standard

Une des choses que RCS ne permet pas de gérer est la modification simultanée
 de mêmes fichiers par plusieurs utilisateurs.
 Un autre outil est disponible pour effectuer ce travail, c'est 
\family typewriter 
CVS
\family default 
 (
\shape italic 
Concurrent Version System
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
).
 
\family typewriter 
CVS
\family default 
, qui est basé sur 
\family typewriter 
RCS
\family default 
, permet également le management des différents release d'un logiciel.
\layout Subsection

Emacs et RCS
\layout Standard

L'éditeur 
\family typewriter 
GNU Emacs
\family default 
 est capable de reconnaître automatiquement un fichier géré par RCS lorsque
 vous l'éditez.
 Emacs fournit alors une interface aux commandes de contrôle de version.
 Vous n'avez donc qu'à apprendre seulement quelques commandes (la plupart
 débutent par "C-x v") pour faire du contrôle de version, ou alors utiliser
 le menu 
\shape italic 
Tools
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
, puis le sous-menu 
\shape italic 
Version Control
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
 Le manuel Emacs contient de la documentation dans le noeud 
\shape italic 
version control
\begin_inset ERT
status Collapsed

\layout Standard

\end_inset 


\shape default 
.
\the_end
