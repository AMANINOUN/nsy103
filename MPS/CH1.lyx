#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 220
\textclass book
\begin_preamble
\usepackage{arabtex}
\end_preamble
\language french
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize a4paper
\paperpackage a4
\use_geometry 1
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\bullet 0
	1
	1
	-1
\end_bullet

\layout Section

Les origines
\layout Standard

L'histoire d'Unix nest pas aussi jeune que ce que lon pourrait penser, en
 effet la première version date de 1969 (des siècles en informatique).
 Pourquoi donc ce système très ancien se place t-il aujourdhui en position
 de force sur le marché ?
\layout Subsection

Résumé de l'historique
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="10" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1969
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Première version d'Unix mono-utilisateur sur PDP-7 écrite par Ken Thompson
 aux Laboratoires Bell.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1970
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Portage dUnix sur PDP-11 par K.
 Thompson et D.
 Ritchie.
 1973 Réécriture du système en langage C.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1974
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Unix est fourni aux universités à des fins denseignement.
 1975 Version 6 : première version commercialisée dUnix.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1977
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Le succès dUnix se confirme.
 500 sites dont 125 universités sont équipés du système Unix.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1979
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Version 7
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1980
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Variante d'Unix avec Unix BSD de luniversité Berkeley.
 1982 Unix System III, BSD 3.0, Xenix System III.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1983
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Unix System V, BSD 4.1, Xenix System V.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1986
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Apparaissent les versions Unix pour les machines Sun et IBM.
 Ce sont SunOS et IBM AIX.
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1988
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Unix System V Release 4 1990 Unix System V Release 5Unix System V Release
 4 1990 Unix System V Release 5
\end_inset 
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
1992
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard


\lang english
Les petits dernier Linux , Qnx, BSD 2.0, 2.4 etc ...
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsection

L'historique
\layout Standard

Parti du système Multics (MULTiplexed Information and Computing Service),
 projet développé communément en 1965 par le MIT (Massachussets Institute
 of Technologie), la General Electric et les Bells Laboratories dAT&T, une
 équipe de chercheurs dont Ken Thompson et Dennis Ritchie ayant réalisé
 le projet, ont commencé à esquisser une première version d'Unix En 1969,
 ils implémentèrent leur premier noyau Unics (UNiplexed Information and
 Computing Service).
 Ecrit en assembleur, il sagissait alors dun système prévu pour un seul
 utilisateur comprenant un système de fichiers hiérarchisé, un sous-système
 de processus et dutilitaires (copie, édition, destruction et impression
 de fichiers).
 La deuxième version dUnics naquit en 1970, on utilisait un seul catalogue
 pour contenir tous les noms de tous les catalogues.
 On y ajoutait un assembleur, un interpréteur, ainsi que la primitive de
 création de processus fork.
 Ce système acceptait deux utilisateurs et Brian Kernighan lui donna le
 nom dUnix.
 1971 première version dUnix.
\layout Standard

1972 deuxième version, on y incluait le mécanisme des tubes (pipes).
\layout Standard

Cest Thompson qui jeta les bases dun des langages les plus célèbres de lhistoire
 informatique.
\layout Standard

Ne se satisfaisant pas du langage B, descendant du CPL et du BCPL (Basic
 Combined Programming Language) pour réécrire lassembleur du système, Thompson
 aidé de son collègue Ritchie décidèrent de construire un véritable compilateur
 auquel ils donnèrent logiquement le nom de C (successeur du langage B).
\layout Itemize

Ce langage, dont on connaît la puissance et lefficacité pour les opérations
 de bas niveau, fut utilisé pour réécrire le noyau dUnix (kernel).
\layout Itemize

Le système devient alors portable.
 Par la même occasion, ce dernier fut transformé en système multi-tâches.
\layout Itemize

1975 sixième version dUnix.
\layout Itemize

1979 septième version, le système de fichiers ainsi que linterpréteur de
 commandes sont améliorés.
 Le langage C est aussi amélioré (unions, définitions de type, cast).
\layout Itemize

La version Unix 32V pour les ordinateurs VAX de Digital Equipment Corporation
 est réalisée avec ladjonction par les chercheurs de luniversité Berkeley
 des mécanismes de mémoire virtuelle, de pagination, et plus tard des sockets
 pour les communications inter-machines.
\layout Itemize

Cette étape marque le départ de la branche Berkeley avec BSD 3.0 (Berkeley
 Software Distribution) et suivantes.
\layout Itemize

Dans le même temps, basé sur la version 7, Unix sétait amélioré avec Unix
 System III, puis Unix System IV et enfin Unix System V.
\layout Itemize

Dautres versions ont vu le jour pour dautres systèmes.
 Principalement on trouve :
\layout Itemize

Xenix, Unix Sco, Unix Interactive, Unix ATT , Linux pour les ordinateurs
 PC, 
\layout Itemize

AUX pour les ordinateurs Macintosh (Apple),
\layout Itemize

AIX pour les ordinateurs IBM RS/6000, - HP-UX pour Hewlett-Packard,
\layout Itemize

SunOS\SpecialChar ~
 et Solaris pour les Sparc Stations de Sun MicroSystems, 
\layout Itemize

Ultrix pour DEC,
\layout Itemize

OSF/DCE (noyau OSF1).
\layout Subsection

Les systèmes d'exploitation
\layout Standard

Les systèmes informatiques peuvent se découper en deux parties distinctes.
 Dun côté, le matériel, cest à dire le processeur, la mémoire, les périphériques
 pour des machines allant des supercalculateurs aux micro-ordinateurs.
 De lautre côté, le logiciel, cest à dire les programmes permettant à ces
 machines de fonctionner.
\layout Standard

Nous nous intéresserons davantage au côté logiciel pour préciser le rôle
 des systèmes d'exploitation qui sont des programmes particuliers.
\layout Standard

En effet, le système dexploitation constitue le coeur de la machine du point
 de vue logiciel.
 Cest lui qui gère les différentes composantes de la machine et assure linterfac
e avec lutilisateur.
 Tandis que les applications telles les compilateurs, gestionnaires de bases
 de données, et autres utilitaires ne font qu'utiliser les ressources de
 la machine.
 Le système dexploitation (ou Operating System, ou OS) doit fournir lenvironneme
nt et les moyens afin de permettre à lutilisateur dexploiter le plus efficacemen
t le matériel.
 Pour cela, il doit résoudre de nombreux problèmes invisibles à lutilisateur.
 
\layout Description

Donnons\SpecialChar ~
des\SpecialChar ~
exemples : Si on veut lire des informations sur un disque il faut,
 mettre le moteur du disque en route, déplacer la tête de lecture jusquà
 l'emplacement de la piste désirée, abaisser la tête de lecture, attendre
 que le bon secteur passe sous celle-ci pour pouvoir envoyer les informations
 en mémoire vive.
\layout Description

De\SpecialChar ~
même, supposons qu'une imprimante est partagée entre plusieurs utilisateurs
 et que ceux-ci envoient simultanément leurs impressions, on risque de retrouver
 un texte incohérent (mélange de toutes les impressions).
\layout Standard

On voit donc que le système dexploitationjoue un rôle primordial.
\layout Standard

Il doit non seulement gérer le plus efficacement possible les ressources
 (temps de processeur, quantité de mémoire, espace disque, ...), mais il doit
 aussi fournir un environnement sûr et une utilisation simple.
\layout Verse
\line_top \line_bottom 
Unix intègre tous ces éléments.
 Il assure la protection des données, détecte les erreurs dans les programmes,
 gère et contrôle l'accès aux ressources.
\layout Standard

Le système dexploitation est conçu selon les architectures des systèmes
 qui peuvent-être mono-tâche (cest le cas du DOS des IBM-PC), multi-tâches
 mono-processeur (la majorité des machines Unix), ou encore multi-tâches
 multi-processeurs (les superordinateurs avec traitement en parallèle).
\layout Standard

Le système qui nous intéresse est le multi-tâches mono-processeur et m\i \^{e}
me
 multi-tâches multi-processeurs (plus rare mais de plus en plus répendu
 Linux-SMP est multi processus), cela veut dire que plusieurs programmes
 se dérouleront sur un seul et même processeur.
\layout Standard

Cela est possible en partageant le processeur entre les différentes tâches
 par tranches de temps 
\begin_inset Quotes eld
\end_inset 

time-sharing
\begin_inset Quotes erd
\end_inset 

 (généralement appelées quantum).
\layout Standard

Ceci entraîne la résolution de problèmes de gestion de tâches qui supposent
 la connaissance et la détermination d'algorithmes délection (les processus
 systèmes sont plus prioritaires que les processus utilisateurs, quelles
 sont les priorités des processus utilisateurs entre eux ?), la résolution
 des problèmes de gestion des ressources, surtout lorsque celles-ci viennent
 à manquer (comme par exemple la mémoire).
\layout Standard

Le système Unix a parfaitement résolu ces difficultés et sa conception en
 couches noyau (kernel), et lenveloppe (le shell) lui a permis dévoluer
 rapidement, par adjonction de fonctionnalités, et de devenir de fait, un
 standard.
\layout Standard
\added_space_top 0.3cm \added_space_bottom 0.3cm \align center 

\begin_inset Graphics FormatVersion 1
	filename imm1.ps
	display color
	size_type 0
	rotateOrigin leftBaseline
	lyxsize_type 1
	lyxwidth 376pt
	lyxheight 324pt
\end_inset 


\layout Subsection

Les atouts d'Unix
\layout Standard

Si Unix est devenu un standard, ce nest pas sans raison.
 Son succès est dû notamment à sa simplicité et aux concepts novateurs quil
 a apporté (à l'époque et toujours aujourdhui).
 En effet, Unix est écrit entièrement (95%) dans un langage de haut niveau,
 le langage C, ce qui le rend facile à lire, à comprendre et à porter sur
 dautres machines, et dans le cadre de Linux il est aisé de personaliser
 le système.
\layout Standard

Des outils pruissant pour les dévelopement, et m\i \^{e}
me pour la redaction de
 trés gros documents (celui-ci par exemple) 
\layout Standard

Unix est 
\emph on 
multi-utilisateurs
\emph default 
 et 
\emph on 
multitâche
\emph default 
s.
 Chaque utilisateur peut exécuter plusieurs programmes en même temps.
\layout Standard

Unix fournit, grâce aux primitives du noyau, une interface capable de créer
 de nombreuses applications.
\layout Verse
\line_top \line_bottom 
Le système de fichiers arborescent dUnix est intelligent, efficace et facile
 à maintenir.
 II offre les mécanismes de sécurité et de confidentialité.
\layout Standard

Les entrées/sorties sont banalisées.
 Laccès aux répertoires, fichiers et périphériques seffectue de manière
 identique.
\layout Standard

Enfin, Unix dispose dune interface utilisateur simple et puissante.
\layout Subsection

Les évolutions
\layout Standard

Bien quUnix possède de nombreux atouts, ceci ne doit pas l'empêcher dévoluer.
 Les évolutions seffectuent dans deux sens : dans le système et les architecture
s.
\layout Standard

De plus en plus Unix intégre les outils de gestion des réseaux (SNMP, Lan
 Manager sur TCP/1P) et des systèmes de fichiers répartis (NFS, RFS, Lan
 Manager).
\layout Standard

Unix sinstalle sur des architectures RISC (Reduce Instruction Set Computer)
 et multiprocesseurs.
\layout Standard

Les terminaux sont remplacés par les stations de travail munis des interfaces
 graphiques XWINDOW, MOTIF, OpenLook, et NeWs, KDE, Gnome.
\layout Standard

On retrouve ces évolutions aussi dans la normalisation.
\layout Standard

Des organisations comme X/Open, POSIX, Unix International, OSF (Open Software
 Foundation) tentent de définir un sytème Unix ouvert afin de permettre
 la totale portabilité des applications, préconisent un système Unix uniqueb
\size footnotesize 
 (il n'y pas encore un Unix unique, c'est probablement une des raisons de
 la réussite de Microsoft)
\size default 
, combinaison des versions existantes (System V et BSD).
\layout Standard

Beaucoup de travaux sont à faire, car les intérêts des constrocteurs et
 des utilisateurs ne sont pas toujours compatibles.
\layout Standard

Alors des organismes de normalisation tels ISO, IEEE, ANSI essayent de concilier
 les uns et les autres et publient régulièrement les recommandations.
 Suivre ou ne pas suivre! ...
\layout Section

Une classification des systèmes
\layout Subsection

Introduction 
\layout Standard

Les premières machines ne disposait pas de système d'exploitation.
 
\layout Standard

Chaque utilisateur disposait de l'ensemble des ressources pour une durée
 déterminée.
 La mise au poir.t des programmes était faite en utilisant les techniques
 de pas à pas et de modification mémoire.
 Les logiciels de base furent les assembleurs, compilateurs et les premières
 bibliothèques de sousprogrammes d'entrée/ sortie.
 C'est le mode guichet ou porte ouverte.
 Vers la W n des années 50 apparaissent les premiers momteurs d'enchainement.
 Les programmes permettaient d'exécuter en séquences une série de travaux
 préparées à l'avance.
 Ce sont les systèmes de traitement par lots "Batch processing system".
 
\layout Standard

Entre 1960 et 1970.
 C'est la naissance des systèmes d'exploitation, processeurs spécifiques
 pour les entrées/sorties et la multiprogrammation.
 Aujourd'hui on peut distinguer 4 grandes classes .
 
\layout Itemize

Les systèmes de traitement par lots (batch), Les systèmes interactifs (temps
 partagé),
\layout Itemize

Les systémes transactionnels,
\layout Itemize

Les systèmes temps réel.
 
\layout Standard

l'évolution des réseaux entrevoit les notlons 
\layout Standard

- De système répartis .
 
\layout Standard

les ressources et les informations sont géographiquement distribuées, -
 Interconnexion des systèmes, - Station de travail .
 bureautique, graphique, etc...
 
\layout Standard

<wa al-`araby 'ay.daN>
\layout Subsection

Moniteur de traitement par lots 
\layout Standard

Un moniteur d'enchaînement était capable d'exécuter les travaux en séquences.
 Ces travaux était fournis à la machine sous la forme de cartes perforées.
 Aujourd'Ymi, ies cartes ont pratiquement disparues.
 
\layout Standard

Le traitement par lots est utilisé en gérant une file de fichiers constrmts
 à partir des terminaux.
 Un travail (job) est constitué d'un traitement découpé en étapes par exemple,
 compilation, éditeur de lien, etc...
 La file d'attente est ordonnée en fonction de la priorité des travaux,
 de la régulation de charge et de loi disponibilité des ressources.
\layout Subsection

Moniteur de temps partagé (time sharing)
\layout Standard

Le moniteur permet la connexion de plusieurs utilisateurs et de travailler
 en mode interactif.
 Le système possède de nombreux outils de développement et des utilitaires.
 Il assure les trois fonctions essentielles - Le partage du temps en tranche
 (slice) L'utilisateur possède la machine pendant cette tranche de temps.
 Le système doit fourmr un temps de réponse acceptable (environ 1 seconde)
 pour les taches élémentaires .
 Accès aux ressources communes pour chaque utilisateur, Mécanisme de mémoire
 virtuelle avec la notion de swap sur disque.
\layout Standard

Le quantum de temps est basé sur deux critères - Temps de réponse aux demandes
 élémentaires de l'utilisateur - Temps de commutation du contexte des processus
 négligeables par rapport au quantum de temps.
 Il est nécessaire de définir un langage de commande, interface entre l'utilisat
eur et le système .
 jeux de commande élémentaire éditeur, lancement d'un programme, .
 utilitaires, - Indication d'erreur , - Fonction d'aide, - Fonctions bibliothèqu
es Exemple .
 L'intépréteur de commande Shell dans UNIX 
\layout Subsection

Le moniteur transactionnél
\layout Standard

Les systèmes transactionnels ont 3 caractéristiques .
 
\layout Itemize

Gestion d'un ensemble d'informations de taille important.
 Les opérations effectuées sur cet ensemble sont définies ; chaque opération
 est identifiée par un début et une fin (transaction).
 
\layout Itemize

Le système d'exploitation gère un grand nombre d'utilisateurs en exécution
 simultanée des transactions.
\layout Itemize

Le système garantie un bon niveau de sécurité des traitements des informations.
 
\layout Standard

Exemples:
\layout Itemize

Compte bancaire, 
\layout Itemize

Réservation d'avion , 
\layout Itemize

Etc...
\layout Standard

Le dialogue utilisateur système (transaction) commence par une connexion,
 comprend n étapes et se termine par une déconnexion.
\layout Subsection

Moniteur temps réel 
\layout Standard

Certains évènements doivent être traités immédiatement .
 cas de processus industriels, pilotage d'avions, de fusées, etc...
 Les 'caractéristiques essentielles de ces types de traitements sont :
\layout Standard

- Prise en compte et traitement d'un évènement dans une durée déterminée
 et maximum quelque soit le cas de figure.
\layout Standard

- Fiabilité totale en cas de défaillance, le système garantissant le minimum
 de fonctionnement.
\layout Standard

Les périphériques sont des capteurs ou des organes de commandes spécifiques
 au processus industriel mis en oeuvre.
 Le moniteur est constitué en général, d'un dispositif multi-tâches dans
 lequel les tâches ont une priorité fixe, les évènements er.térieurs étant
 pris en compte par un mécanisme d'interruption qui possède des niveaux
 de priorités différentes.
 On parle aussi d'exécutif temps réel.
 Elle est souvent réalisée à partir des éléments de constructions suivants
 .
 
\layout Standard

- Segmentation de la mémoire, 
\layout Standard

- Scheduling le plus simple possible,
\layout Standard

- On privilégie les mécanismes d'interruption.
 
\layout Section

Le rôle de l'ingénieur système
\layout Standard

avant d'aller plus loin donnons les rôle que doit posséder un ingénieur
 système, c'est pour vous former à cet aspect d'unix que ces ED sont orienté
\layout Standard

L'ingénieur système sur Unix a en charge l'administration du système.
 Ceci ne se borne pas à la connaissance d'une série de commandes, mais plut\i \^{o}
t
 par la vision globale du fonctionnement de tout le système (ainsi que la
 connaissance des stuctures de données).
 II doit aussi étre présent pour renseigner les autres utilisateurs et créer
 de nouvelles commandes utiles au site sur lequel il travaille, il doit
 être la bibliographie vivante! Son travail consiste plus particulièrement:
\layout Itemize

à installer le système lors de la première mise en service.
 Cette installation inclut le branchement du matériel, la disposition éventuelle
 du matériel.
 Si le système nest pas pré-installé sur le disque (ou si des disques sont
 ajoutés), il faudra alors initiatiser 1e disque (le formatter et insraller
 la version du système désirée).
 La configuration Unix est fonnée par un terminal particulier appelé console
 qui est directement relié à la machine et par une série de terminaux quelconque
s reliés soit à lunité centrale par des câbles série, soit via un réseau;
\layout Itemize

Configurer certains paramètres du noyau comme lespace du buffer cache (le
 buffer cache est un ensemble de blocs mémoire de la même taille que les
 blocs disque qui permettent de tamponner les accès disque), lespace de
 swap, les tailles des différentes putitions des disques (cE 2.2 Création
 dun nouveau système de fichiers) qui doivent être choisies en fonction
 de la configuration et de lusage ultérieur de la machine;
\layout Itemize

Booter ou arréter (halt ou sbutdown) le système;
\layout Itemize

Ajouter ou retirer des utilisateurs et des groupes dutilisateurs;
\layout Itemize

Ajouter ou retirer des fichiers pammètres représentant un périphérique;
\layout Itemize

Maintenir le système de fichiers en sassurant de son intégrité (commande
 fsck); 
\layout Itemize

assurer une sécurité minimale du système.
\layout Itemize

Veille technologique et assiter les developpeurs d'applications
\layout Subsection

Fonctions de l'administrateur.
 
\layout Standard

I1 doit utiliser les mesures de performances réalisées dans le but d'améliorer
 l'exploitation.
 Pour cela il dispose d'oütils matériels ou logiciels pour - relever les
 mesures traiter les valeurs obtenues (statistique, modèle) - alerter l'administ
rateur s'il y a des goulets d'étranglement.
 Il doit gérer les utilisateurs (droits, ressources etc...) Il doit améliorer
 le système, ajout de nouveaux logiciels, matériel et éventuellement redéfinir
 les paramètres de base (génération système) 
\layout Subsubsection

Mesure de performances.
 
\layout Standard

Elles sont difficiles de mise en oeuvre et il faut se méfier des comparaisons
 hâtives.
 Le système d'exploitation "facile à utiliser" n'est pas une valeur simple
 à quantifier.
 La mesure du nombre d'accès sur un disque en un temps défini est mieux
 préhensible.
 Les mesures courantes sont 
\layout Itemize

Temps à traversée pour un programme donné c'est le temps écoulé entre le
 lancement du travail et la récupération des informations traitées.
 
\layout Itemize

Le temps de reprise.
 Temps écoulé entre l'envoi d'une commande et la reprise du système (un
 utilisateur s'attend à un temps de réponse court pour un pettit travail
 et long pour un gros travail).
 
\layout Itemize

Ces valeurs sont aléatoires et souvent l'analyse ne peut être faite qu'avec
 une approche statistique.
 D'autres mesures portent sur .
\layout Itemize

le nombre de processus à l'heure 
\layout Itemize

la charge d'utilisationn à une ressources.
 Ces mesures peuvent éventuellement servir à facturer.
 
\layout Subsubsection

Moyens de comparaison.
 
\layout Paragraph

La puissance de l'unité centrale.
 
\layout Standard

Elle est definie par la capacité de traiter un nombre d'instructions.
 par unité de temps.
 MIPS millions d'înstructions par seconde.
 (Les plus gros ordinateurs fonctionnent à quelques dizaines de MIPS).
 Cette valeur de comparaisen est à pondérer avec le jeu d'instructionns,
 et l'architecture machme (taille du mot).
\layout Paragraph

Les benchmarks.
 
\layout Standard

Ce sont des programmes de test, typiques de certains types d'application.
 Ils permettent de comparer les systèmes d'exploitation dans un cadre d'utilisat
ion type.
\layout Paragraph

La simulation.
\layout Standard

On crée un modèle dont on extrait les valeurs des paramètres de fonct~onnement.
 L'analyse et le traitement des valeurs permet de conclure.
 Utilisation pour des applications spécialisés (aérospatiales, transport
 etc...) 
\layout Paragraph

Les modèles analytiques.
 
\layout Standard

Les systèmes informatiques sont modélisables par un réseau de file d'attente.
 On mesure les éléments définis dans les études théoriques développées sur
 les files d'attente.
 Voir (little, ERLANG, Kenstall, etc...).
 
\layout Subsubsection

Instant de mesure.
 
\layout Standard

L'instant de mesure influence fortement les résultats.
 
\layout Paragraph

En traitement par lots.
 
\layout Standard

- Utilisation des machines en dehors des heures ouvrables plus ou moins
 importantes.
 
\layout Paragraph

Transactionnel.
 
\layout Standard

Utilisation continu pendant les heures de travail baisse vers la pause déjeuner.
 
\layout Paragraph

Intéractif pur 
\layout Standard

Similaire au transactionnal mais les pointes sont beaucoup plus élevées.
 
\layout Subsubsection

Génération système.
\layout Standard

La génération système sert à définir l'environnement aussi bien logiciels
 que matériels.
 Il est indispensable à la mise en service d'une nouvelle machine qui n'est
 dotée que d'un système d'exploitation minimum.
 C'est à l'acquéreur de compléter son système.
 Si les performances se dégradent ou si des problèmes de congestion apparaissent.
 Lorsque l'on rajcute des ressources qui vont être liées intimement au système.
 
\layout Paragraph

Contenu du disque système.
 
\layout Standard

Le disque système contient l'annonce "boot strap" qui va permettre de charger
 les modules utiles au foncticnnement en mémoire centrale.
 Les modules sont de deuy types.
 
\layout Itemize

du code exécutable
\layout Itemize

des données et des cutils systèmes devront être rangées à des adresses bien
 précises (générie l'édition de lieu) 
\layout Paragraph

2) Contenu de la mémoire centrale.
\layout Standard

Elle contient les tables systèmes, le code système et les zones utilisatrices.
 Les bibliothèques systèmes contiennent: 
\layout Itemize

des données statiques (par exemple .
 les tables associées aux périphériques, etc...) 
\layout Itemize

des données dynamiques (par exemple .
 les descripteurs des utilisateurs, les files d'attente , etc...)
\the_end
