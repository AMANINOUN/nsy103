#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 220
\textclass book
\begin_preamble
\usepackage {stmaryrd}
\usepackage {verbatim}
\usepackage{arabtex}
\end_preamble
\language french
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize a4paper
\paperpackage a4
\use_geometry 1
\use_amsmath 1
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 2
\paperpagestyle headings
\bullet 0
	0
	1
	5
\end_bullet
\bullet 2
	0
	1
	-1
\end_bullet

\layout Section

Ce quil faut savoir...
\layout Standard

Pour commencer nous allons voir les commandes minimums à conaître pour avoir
 une vue d'ensemble cohérente et pouvoir démarrer.
 Ces commandes sont toute en mode texte il faut toujours savoir se débrouiller
 sur un système sans les outils IHM.
\layout Standard

Cela couvre principalement la gestion des fichiers, la gestion des utilisateurs
 ainsi que la vision que l'utilisateur a du système.
\layout Subsection

Le système de fichiers
\layout Standard

Un fichier est un ensemble dinformations auquel est associé un nom.
 Un système de fichiers permet à lutilisateur de conserver des informations
 en les nommant.
 
\emph on 
Il doit supporter les 
\series bold 
pannes matérielles
\series default 
 et doit comporter un mécanisme de 
\series bold 
sécurité contre les accès illicites
\series default 
.

\emph default 
 Le système de fichiers d'Unix est dit arborescent car il peut être représenté
 par un arbre.
 Cet arbre est constitué dune part des feuilles qui symbolisent les fichiers
 et dautre part de branches qui symbolisent les répertoires.
 Ainsi un répertoire peut contenir soit des fichiers soit des sous-répertoires.
 Le répertoire (ou catalogue ou directory) situé au sommet sappelle la racine
 (root) et joue un rôle spécial.
\layout Description

Exemple d'arborescence :
\layout Standard
\added_space_top 0.3cm \added_space_bottom 0.3cm \align center 

\begin_inset Graphics FormatVersion 1
	filename imm2.ps
	display color
	size_type 0
	rotateOrigin leftBaseline
	lyxsize_type 1
	lyxwidth 300pt
	lyxheight 280pt
\end_inset 


\layout Subsection

Les chemins absolus
\layout Standard

Pour accéder à un fichier, il faut connaître son 
\emph on 
nom
\emph default 
.
\layout Description

Le\SpecialChar ~
nom d'un fichier dans l'arborescence correspond au chemin que l'on prend
 pour y arriver.
\layout Standard

Par exemple, pour accéder au fichier cpp.c du schéma, il faut partir de la
 racine (/, puis aller dans le répertoire des utilisateurs (users), puis
 dans le répertoire du groupe auquel appartient l'utilisateur (cours), puis
 aller dans le répertoire de lutilisateur (moi).
 Enfin, lutilisateur moi a créé 2 sous-répertoires pour ses besoins.
\layout Standard

II faut choisir le catalogue contenant les sources des programmes (src),
 puis désigner enfin le fichier (cpp.c).
\layout Standard

Le nom complet est donc la mise bout à bout des noms constituant le chemin.
\layout Standard

La barre oblique / a été choisie comme convention pour séparer ces noms
 (sauf le premier / qui symbolise la racine).
\layout Standard

Le nom complet du fichier, cest-à-dire son chemin absolu, est : /users/ens/moi/s
rc/cpp.c
\layout Standard

De même, le chemin absolu du fichier calendar est : /users/ens/moncalendar
\layout Subsection

Le répertoire courant
\layout Standard

A tout moment de sa session chaque utilisateur se trouve dans un répertoire
 de l'arborescence du système.
 Ce répertoire peut-être représenté comme un nom absolu.
 
\layout Description

Par\SpecialChar ~
exemple :
\family typewriter 
\size small 
 /users/ens/moi
\family default 
\size default 
 On peut ainsi désigner un fichier dans ce répertoire, il suffit de donner
 le nom du fichier.
\layout Standard

Par exemple, si le catalogue de travail est : 
\family typewriter 
/users/ens/moi
\family default 
, Le fichier calendar peut être désigné simplement par : 
\family typewriter 
calendar
\family default 
.
 On désigne donc le fichier directement par son nom.
 De même, si le catalogue de travail est le répertoire :
\family typewriter 
\size small 
 /users/ens/moi/src
\family default 
\size default 
; on peut désigner plus simplement les deux fichiers qui y résident par
 :
\layout LyX-Code


\size small 
cpp.c
\newline 
pstree.c
\layout Standard

Ce répertoire à une signification particulière, cest le répertoire de connexion.
 Cest celui sur lequel on se retrouve en début de session.
 Il est souvent appelé aussi le home directory (HOME).
\layout Subsection

Les chemins relatifs
\layout Standard

Les chemins absolus sont complexes et longs à taper.
 Pour simplifier, on utilise souvent les chemins relatifs.
 Cette notion repose sur celle de catalogue de travail, cest à dire du répertoir
e courant.
\layout Standard

En effet, si nous sommes dans le répertoire : 
\family typewriter 
/users/ens/moi
\family default 
 et que nous voulions désigner le fichier 
\family typewriter 
pstree.c
\family default 
 situé dans le répertoire src, le chemin sera simplement (on décrit uniquement
 le chemin restant à effectuer) :
\family typewriter 
 src/pstree.c
\layout Standard

Allons plus loin.
 Si le catalogue de travail est : 
\family typewriter 
/users
\family default 
.
 Le chemin relatif pour désigner le fichier 
\family typewriter 
calendar
\family default 
 est : 
\family typewriter 
ens/moi/calendar
\family default 
.
 Très important : les chemins relatifs ne commencent jamais par le caractère
 barre oblique /.
 Cest la seule manière de distinguer un chemin relatif dun chemin absolu.
 
\layout Description

Remarque\SpecialChar ~
: Lorsquun nom absolu est utilisé pour désigner un fichier, il y
 a unicité de ce fichier (on suit le chemin depuis la racine, on est donc
 bien sûr datteindre le bon fichier).
 En revanche, lorsqu'on utilise des noms relatifs, on ne peut plus affirmer
 si le fichier est unique.
\layout Standard

Par exemple le fichier : 
\family typewriter 
src/cpp.c
\family default 
, peut représenter un fichier depuis 
\family typewriter 
/users/ens/moi
\family default 
 ou depuis /
\family typewriter 
users/ens/lui 
\family default 
ou encore 
\family typewriter 
/users/cours/ul/src/cpp.c
\family default 
.
\layout Subsection

Les conventions .
 et ..
\layout Standard

Le symbole 
\family typewriter 
.

\family default 
 (point) représente le répertoire de travail.
 Ceci évite de taper le nom absolu du répertoire courant dans certaines
 commandes.
\layout Standard

Le symbole 
\family typewriter 
..
 
\family default 
(deux points) représente le nom du répertoire situé juste au-dessus (répertoire
 père).
 Ainsi, si le répertoire courant est : 
\family typewriter 
/users/ens/moi
\family default 
, alors ..
 représente le répertoire : 
\family typewriter 
/users/ens
\layout Subsection

Les protections
\layout Standard

Le système Unix connaît tous les utilisateurs.
 Chaque utilisateur appartient à un groupe.
 Ceux qui nappartiennent pas au groupe sont les autres.
\layout Standard

Chaque fichier garde la trace du propriétaire et du groupe auquel il appartient.
 Le système permet de contrôler 3 opérations sur les fichiers :
\layout Standard

lecture écriture exécution
\layout Standard

Ainsi pour tout objet, on connaît le type de lobjet (cf la commande ls),
 les droits daccès sur cet objet pour le propriétaire, les utilisateurs
 du même groupe que le propriétaire (exécuter la commande id pour connaître
 son groupe principal), et les autres.
\layout Standard

Ces droits sont représentés par 3 groupes de 3 attributs rwx :
\layout Standard

r pour lecture (read), w pour écriture (write), x pour exécution (execute),
\layout Standard

le tiret (-) signifie l'absence de droit.
\layout Standard

Exemple : 
\family typewriter 
\size small 
ls -l
\layout Standard


\begin_inset Include \verbatiminput{exls.txt}

\end_inset 


\layout Standard

Pour pouvoir exécuter un fichier il suffit davoir le droit x (le droit de
 lecture n'est pas nécessaire).
\layout Standard

Ces droits n'ont pas tout à fait la même signification pour les répertoires
 (un répertoire est un fichier avec une structure particulière).
 En effet, le droit de lecture permet de connaître le nom de chaque objet
 contenu dans le répertoire, mais sans plus d'informations (on ne sait si
 ce sont des fichiers ou dautres sous répertoires).
\layout Standard

Pour avoir accès à ces renseignements complémentaires il faut avoir le droit
 (x) exécution.
 Ce droit autorise l'accès aux informations concernant tous les éléments
 contenus dans le répertoire (les inodes).
 Pour pouvoir atteindre un objet dans un répertoire il faut donc avoir le
 droit exécution sur tous les répertoires des niveaux supérieurs.
\layout Standard

Le droit écriture dans un répertoire symbolise la possibilité de modifier
 un fichier (ou son inode).
 Pour effacer, modifier les droits daccès d'un fichier, il faut avoir le
 droit écriture sur le répertoire, même si éventuellement on n'a aucun droit
 sur le fichier lui méme (l'accès est fait par le répertoire).
\layout Standard

Remarque : si on a un droit décriture sur un fichier, sans avoir le droit
 décriture sur le répertoire le contenant, il est impossible d'effacer celui-ci.
 En revanche on peut le modifier et éventuellement le remettre à zéro (avec
 la commande copie par exemple).
\layout Description

Un\SpecialChar ~
exemple:
\layout Standard


\begin_inset Include \verbatiminput{doitrep.txt}

\end_inset 


\layout Subsection

Les commandes
\layout Standard

Le symbole '$' est le message standard du Shell (nous verrons quil est possible
 de le modifier, (cf Les variables du Shell : PSl), c'est-à-dire de linterpréteu
r de commandes.
 Il invite l'utilisateur à taper une commande.
 Les commandes sont la plupart du temps tapées en minuscules.
 Elles ont la forme générale suivante :
\layout Standard


\family typewriter 
$ commande [options] [paramètres]
\layout Standard

Unix essaye d'être uniforme, même dans les commandes.
 Ainsi malgré leur diversité, elles possèdent presque toutes les mêmes formes.
\layout Standard

Cependant, il se peut que l'on ait besoin d'aide sur une commande.
 Unix dispose, à cet effet, de laide en ligne.
 Pour y accéder, il suffit de taper :
\layout Standard


\family typewriter 
man <nom-de-la-commande> 
\layout Standard

Par exemple :
\layout Standard


\family typewriter 
\size small 
$ man login
\layout Standard

Décrit la commande login.
 Il sagit de la même documentation que celle disponible sur papier.
\layout Standard


\family typewriter 
\size small 
$ man man
\layout Standard

Pour obtenir l'aide sur laide.
\layout Standard

man fonctionne même pour les primitives système de C,
\layout Standard

exemple: man sqrt
\begin_inset Include \verbatiminput{mansqrt.txt}

\end_inset 


\layout Standard

Remarque : Souvent les commandes lancées sans paramètres attendent une saisie
 au clavier.
 Pour arrêter, faire ^D (appui sur les touches [Ctrl] et [d]).
\layout Subsection

Se connecter
\layout Standard

Pour pouvoir taper des commandes il faut passer par une phase de connexion.
 Cest à ce moment que le système détermine s'il vous autorise l'accès ou
 non.
\layout Standard

Cette connexion est obligatoire avant chaque session de travail.
\layout Subsubsection

Vous navez pas encore de mot de passe
\layout Standard

La connexion sur une machine Unix seffectue lors de l'affichage sur le terminal
 du message (ce message peut éventuellement être précédé par le nom de machine
 ou bien le nom du système) :
\layout Standard


\family typewriter 
\size small 
login :
\layout Standard

Vous devez alors entrer votre nom dutilisateur et valider en tapant sur
 la touche [Return].
\layout Standard

Exemple : login : unix
\layout Standard

Si l'utilisateur unix est connu alors une bannière de bienvenue satfichera,
 ainsi que le message d'invite du système.
 L'utilisateur peut alors commencer à travailler.
\layout Standard

Si le nom est incorrect ou bien l'utilisateur inconnu, alors le mot de passe
 est demandé et vérifié.
 En cas déchec les messages suivants sont affichés :
\layout Standard


\family typewriter 
\size small 
login : unix 
\layout Standard


\family typewriter 
\size small 
Password : ******
\layout Standard


\family typewriter 
\size small 
login incorrect.
 
\layout Standard


\family typewriter 
\size small 
login :
\layout Standard

Lutilisateur peut alors essayer à nouveau.
\layout Standard

Si vous navez pas eu de messages ou si le système ne vous a demandé aucun
 mot de passe pour accéder à votre compte, cela veut dire que vous navez
 pas de mot de passe et que nimporte qui connaissant votre nom dutilisateur
 peut entrer chez vous.
 Si vous désirez installer un mot de passe, taper la commande passwd.
\layout Standard

$ passwd
\layout Standard

Les messages suivants s'afficheront : Enter new password :
\layout Standard

Re-enter new password :
\layout Standard

Remarque : lorsque le système vous demande un mot de passe, celui-ci n'est
 jamais affiché à lécran.
 Le terminal est mis en mode sans écho, les mots de passe sont archivés
 dans la bd du système aprés cryptage.
\layout Subsection

Vous avez déjà un mot de passe
\layout Standard

Au message login entrer votre nom dutilisateur puis valider par la touche
 [ReturnJ Ensuite apparaît le message Password qui vous invite à entrer
 votre mot de passe.
 Saisissez-le sans vous tromper, et terminer par le touche [ReturnJ.
\layout Standard

Toute erreur peut être rectifiée par la touche [BackspaceJ.
\layout LyX-Code

login : unix 
\newline 
Password :
\layout Standard

Le mot de passe nest jamais affiché, bien évidemment pour des questions
 de sécurité.
 Conserver le soigneusement et ne le confier qü aux personnes de confiance.
 Si le login et le password sont correctement saisis alors une bannière
 de bienvenue, ainsi que le message dinvite du système sa~chent.
\layout Standard

Vous pouvez alors commencer à travailler.
\layout Standard

Au contraire, si une erreur quelconque se produit, un message derreur saffiche,
 le login apparaît de nouveau pour vous permettre de recommencer.
\layout Standard

Exemple :
\layout LyX-Code

login : inconnu 
\layout LyX-Code

Password : 
\layout LyX-Code

login incorrect.
 
\layout LyX-Code

login :
\layout Standard

Lorsque vous êtes connectés et que vous désirez changer votre mot de passe,
 il suffit alors de lancer la commande passwd.
\layout LyX-Code

$ passwd
\layout Standard

Les messages suivants safircheront : 
\layout LyX-Code

Enter old password :
\layout LyX-Code

Enter new password : 
\layout LyX-Code

Re-enter new password :
\layout Standard

Vous êtes, seuls, autorisés à changer votre mot de passe.
 Pour des raisons de sécurité, l'ancien mot de passe est demandé (si vous
 vous êtes absentés momentanément on ne peut changer votre mot de passe).
\layout Standard

Le nouveau mot de passe est redemandé afin dêtre sûr que vous savez le saisir
 correctement.
\layout Standard

En cas derreur, lancien mot de passe est conservé.
\layout Subsection

Se déconnecter ...
\layout Standard

Lorsque vous avez terminé, ou que vous abandonnez votre terminal, noubliez
 pas de vous déconnecter.
 Vous signalerez ainsi au système la fin de votre session.
\layout Standard

La déconnexion s'effectue simplement par les commandes exit ou ^D (appui
 simultané de la touche [Control] et [D]).
\layout Standard


\family typewriter 
\size small 
$exit 
\layout Standard


\family typewriter 
\size small 
$^D
\layout Standard

Lorsque la déconnexion est effective, le login apparaît de nouveau.
 A vous dessayer ...
 2.4.
 Gérer les répertoires
\layout Standard

Les fichiers sur Unix sont placés dans des répertoires.
 I1 est indispensable de bien gérer ses propres répertoires de manière à
 classer tous ses fichiers.
\layout Subsubsection

Changer le répertoire de travail
\layout Standard

La commande 
\emph on 
cd (Change Directory)
\emph default 
 permet de changer le répertoire de travail, et donc se déplacer dans le
 système de fichiers.
\layout Standard

Sans paramètre, cd permet de revenir au répertoire de connexion (cest le
 répertoire ou le système nous positionne au début de la session, cf.
 Les variables Shell : HOME).
\layout LyX-Code

$ cd
\layout LyX-Code

$ cd ~
\layout LyX-Code

$ cd $HOME
\layout Standard

Avec un nom de répertoire ou un chemin, cd positionne dans le répertoire
 spécifié sil existe.
\layout Standard

Par exemples :
\layout LyX-Code

$ cd /etc 
\layout LyX-Code

$ cd..
 
\layout LyX-Code

$ cd usr/bin 
\layout LyX-Code

$ cd .
\layout Description

Rappel\SpecialChar ~
: ..
 désjgne le répertoire père et .
 désigne le répertoire eourant, celui où lon se trouvé.
\layout Standard

A vous dessayer :
\layout Standard

Vous êtes dans le répertoire /users/ens/moi, allez dans le répertoire ens.
 Allez dans le répertoire tmp se trouvant sous la racine (/tmp).
 Revenez chez vous.
\layout Subsection

Lister les répertoires
\layout Standard

Il nexiste pas de commande directe pour lister les répertoires uniquement.
\layout Standard

La commande ls permet de lister tous les fichiers, ainsi que les répertoires.
 Utilisée avec loption -1 elle donne plus dinformations :
\layout LyX-Code

$ls -lg total 2
\layout LyX-Code

-rwxr-xr-x 1 u1 cours 51 Jun 27 12:00 calendar 
\layout LyX-Code

drwxr-xr-x 2 u1 cours 512 Jun 27 12:00 src
\layout Standard

Le premier caractère de chaque ligne identifie le type de lobjet : - pour
 fichier normal, d pour répertoire.
\layout Standard

On retrouve les droits dont on a déjà parlé.
 Le premier chifire qui suit identifie le nombre de liens de lobjet.
 Il faut remarquer que le nombre de liens d'un répertoire est toujours supérieur
 à 1.
\layout Standard

Pour un répertoire vide, il est égale à 2, ce qui correspond aux liens sur
 le répertoire père (..) et sur lui-même (.)
\layout Standard

Pour les répertoires non vides, ce nombre correspond au nombre de sous répertoir
es augmenté de 2.
\layout Standard

Cependant, on peut utiliser une autre commande, que nous verrons plus tard,
 pour effectuer cette opération :
\layout LyX-Code

$ find .
 -type d -print
\layout Standard

Recherche et affiche dans le répertoire courant les fichiers de type d (director
y ou répertoire).
\layout Subsection

Créer un répertoire
\layout Standard

Lunique commande pour créer un répertoire, catalogue ou sous-répertoire
 est le commande mkdir (make directory).
\layout LyX-Code

$ mkdir sources
\layout LyX-Code

$ mkdir lettres jeux
\layout Standard

Les répertoires sources, lettres et jeux ont été créés sous le répertoire
 courant.
\layout Standard

La commande admet plusieurs paramètres, ainsi que des chemins.
\layout LyX-Code

$ mkdir objets /users/cours
\layout Standard

Le répertoire objets est créé dans le répertoire courant alors que le répertoire
 cours est créé dans le répertoire users sous le répertoire racine.
\layout Standard

On ne peut créer l'arborescence que niveau par niveau.
\layout Standard

Les répertoires Iettres et jeux du précédent exemple sont créés au même
 niveau.
 Cependant, si lon désire créer l'arborescence sur plusieurs niveaux certains
 systèmes autorisent lutilisation de loption -p.
\layout Standard

$ mkdir -p lettres /jeux
\layout Standard

Le répertoire jeux est créé dans le répertoire lettres (même si le ré ertoire
 Iettres nexistait pas).
 En fait avec linux (> 2.2) il suffit de faire: mkdir lettres/jeu
\layout Subsection

Afficher le répertoire courant
\layout Standard

Il est parfois utile de connaître le répertoire courant de travail, surtout
 après avoir changé de répertoire.
\layout Standard

La commande pwd (print working directory) affiche le répertoire courant
 de travail.
\layout LyX-Code

$ pwd 
\layout LyX-Code

/users/ens/moi 
\layout LyX-Code

$cd..
\layout LyX-Code

$ pwd 
\layout LyX-Code

/users/ens
\layout Subsection

Supprimer un répertoire
\layout Standard

II est important de pouvoir créer des répertoires, mais il peut être nécessaire
 de les détruire.
\layout Standard

Unix met la commande rmdir (remove directory) à notre disposition pour supprimer
 tout répertoire vide au préalable, ne contenant plus que les répertoires
 (.) et (..).
\layout LyX-Code

$ rmdir objets
\layout LyX-Code

$ rmdir sources jeux lettres
\layout Standard

Cependant, il est possible de détruire des répertoires non vides.
 Voir la commande rm (remove).
\layout Subsection

Gérer les fichiers
\layout Standard

Les fichiers sont des suites d'octets que lon écrit sur les disques.
 Ces fichiers peuvent contenir du texte, des programmes exécutables ou encore
 les informations d'une base de données.
 Dans tous les cas la forme du fichier reste la même.
\layout Subsection

Afficher le contenu d'un fïchier
\layout Standard

Pour visualiser le contenu dun fichier, en général un fichier texte, on
 utilise la commande cat (concatenate).
\layout LyX-Code

$ cat essai
\layout Standard

Ceci est un fichier essai
\layout LyX-Code

$ cat essai2
\layout Standard

bonjour Ceci est un fichier essai
\layout Standard

Sans paramètre cat attend une saisie sur lentrée standard.
\layout Standard

Au caractère fin de fichier (^D), cat envoie les données sur la sortie standard.
\layout Standard

cat admet plusieurs paramètres, dans ce cas les textes sont affichés les
 uns derrière les autres (concaténation).
 Nous verrons lors des redirections comment utiliser le résultat de cette
 commande pour créér un fichier destination.
\layout Standard

Ils défilent à lécran.
 Pour arrêter le défilement, il est possible dappuyer simultanément sur
 les touches [Ctrl] et [s].
 Pour le faire repartir [Ctrl] et [q].
\layout Standard

Cependant, il existe une commande plus avancée permettant laffichage formaté
 et contrblé du texte.
 Cette commande est la commande more.
\layout Standard


\family typewriter 
$ more essai2
\layout Standard

more accepte plusieurs fichiers et offre plusieurs options durant son exécution.
 [?] permet de voir toutes les options,
\layout Standard

[Return] passe à la ligne suivante, [Espace] passe à la page suivante,
\layout Standard

et enfin [q].
 pour sortir prématurément.
\layout Standard


\family typewriter 
$ more CH1.lyx
\layout Standard


\begin_inset Include \verbatiminput{more.txt}

\end_inset 


\layout Quotation

He oui! il faut connaître un minimum d'anglais quand on est informaticien!
\layout Standard

Remarque : La commande more, si elle est appelée avec plusieurs noms de
 fichiers place en tête de chaque fichier une bannière avec le nom du fichier
 courant.
\layout Standard

Si lon désire afficher le contenu de fichiers non ASCII, il faut alors utiliser
 la commande od (c£ Les principales commandes).
\layout Subsection

Lister des fichiers
\layout Standard

Pour affcher les fichiers et les répertoires du répertoire courant, il faut
 utiliser la commande Is (list).
\layout Standard

Is offre plusieurs options selon le format daffichage désiré.
 Il est possible de combiner les options.
\layout Description

-1 Présenter un fichier par ligne.
\layout Description

-a Afficher tous les fichiers des répertoires, y com- pris les fichiers
 commençant par un `.'.
\layout Description

-c Trier le contenu des répertoires en fonction des dates de changement
 des statuts de fichiers, plutôt qu'en fonction de la date de modification.
 S'il s'agit d'un format long, afficher la date de changement de statut
 plutôt que la date de modifi- cation du fichier.
\layout Description

-d Afficher les répertoires avec la même présentation que les fichiers,
 sans lister leur contenu.
\layout Description

-i Afficher le numéro d'index (i-noeud) de chaque fichier à gauche de son
 nom.
\layout Description

-l En plus du nom, afficher le type du fichier, les permissions d'accès,
 le nombre de liens physiques, le nom du propriétaire et du groupe, la taille
 en octets, et l'horodatage (de la dernière modifica- tion, sauf si une
 autre date est réclamée par les options -c ou -u).
 Pour les fichiers vieux de plus de 6 mois, ou en avance sur la date de
 plus d'une heure, l'horodatage contient l'année à la place de l'heure.
 Les types de fichiers sont indiqués par les caractères suivants : - pour
 les fichiers ordi- naires, d pour un répertoire (directory), b pour un
 fichier spécial en mode bloc, c pour un fichier spécial en mode caractère,
 l pour un lien symbol- ique, p pour une fifo (named pipe), s pour une socket.
 -q Afficher des points d'interrogation à la place des caractères non-imprimable
s dans les noms de fichiers.
\layout Description

-r Inverser le tri du contenu des répertoires.
\layout Description

-t Trier le contenu des répertoires en fonction de la date et non pas en
 ordre alphabétique.
 Les fichiers les plus récents sont présentés en premier.
\layout Description

-u Trier le contenu des répertoires en fonction de la date de dernier accès
 au fichier plutôt que selon la date de modification.
 Si le format d'affichage est large, c'est la date de dernier accès qui
 est affichée.
\layout Description

-C Présenter les fichiers en colonnes, triés verti- calement.
\layout Description

-F Ajouter un caractère à chaque nom de fichier pour indiquer son type.
 les fichiers réguliers exécuta- bles sont suivis d'un `*'.
 Les répertoires sont suivis de `/', les liens symboliques d'un `@', les
 FIFOs d'un `|'.
 Les fichiers réguliers non- exécutables ne sont suivis d'aucun caractère.
\layout Description

-R Afficher récursivement le contenu des sous-répertoires.
\layout Paragraph

Exemple
\layout LyX-Code

$ ls -lg
\layout LyX-Code

total 2
\layout LyX-Code

-rwxr-xr-x 1 u1 cours 15 Jun 27 12:00 calendar 
\layout LyX-Code

drwxr-xr-x 2 u1 cours 512 Jun 27 12:00 src
\layout Standard

Affiche les objets sous le format long.
 On retrouve ici tous les renseignements concernant chaque fichier :
\layout Standard

le total identifie le nombre de bloc de 512 octets nécessaires pour la sauvegard
e du répertoire,
\layout Standard

le premier caractère concerne le type de lobjet, d pour directory (répertoire),
 - pour fichier normal, c pour fichier device (périphérique) en mode caractère),
 b pour fichier device en mode bloc,
\layout Standard

la série de 9 caractères représente les droits daccès du fichier (lecture,
 écriture, exécution pour le propriétaire, le groupe et les autres),
\layout Standard

le chifire est le nombre de liens de lobjet (au moins 2 pour un répertoire).
\layout Standard

Les deux noms suivant identifient succésivement le propriétaire et le groupe
 du propriétaire au moment de la création du fichier, on trouve ensuite
 la taille en octet de lobjet, puis la date de dernière modification (et
 non de création) et finalement le nom de lobjet.
\layout Subsection

Changer les attributs dun fichier
\layout Standard

Unix permet pour tout fichier de positionner les droits daccès désirés selon
 le format dont on a déjà parlé.
\layout Standard

On spécifie ainsi les droits daccès du fichier pour le propriétaire du fichier,
 les utilisateurs appartenant au même groupe que le propriétaire et les
 autres utilisateurs.
 La commande réalisant cette fonction est chmod (change mode).chmod admet
 comme paramètres :
\layout Standard

chmod modifie les permissions d'accès de chacun des fichiers indiqués, en
 suivant l'indication de mode, qui peut être une représentation symbolique
 du changement à effectuer, ou un nombre octal représentant le motif binaire
 des nouvelles autorisations.
\layout Standard

Le format symbolique des changements de mode est `[ugoa...][[+-=][rwxXstugo...]...][,...]'.
\layout Standard

Plusieurs opérations symboliques peuvent être séparées par des virgules.
\layout Standard

Une combinaison des lettres `ugoa' contrôle la catégorie d'accès à modifier.
 Il peut s'agir de l'utilisateur possédant le fichier (u), des autres utilisateu
rs du même groupe que le fichier (g), des utilisateurs n'appartenant pas
 au groupe du fichier (o), ou de tous les utilisateurs (a).
 Si aucune catégorie n'est indiquée, l'ensemble (a) est pris par défaut,
 mais les bits correspondant à des bits à 1 du umask ne sont pas affectés.
\layout Standard

L'opérateur `+' autorise un accès, l'opérateur `-' inter­ dit un accès,
 et l'opérateur `=' autorise exclusivement l'accès indiqué.
\layout Standard

Les lettres `rwxXstugo' sélectionne le type d'autorisation concernée :
\layout Description

r lecture,
\layout Description

w écriture,
\layout Description

x exécution (ou parcours pour les répertoires),
\layout Description

X exécution, uniquement si le fichier est un répertoire, ou s'il a déjà
 une autorisation d'exécution pour une des catégories d'utilisateur (s'il
 s'agit donc bien d'un fichier exécutable),
\layout Description

s utiliser l'ID du propriétaire ou du groupe propriétaire du fichier lors
 de l'exécution,
\layout Description

t il sert uniquement pour les répertoires.
 Il indique que seuls le propriétaire du répertoire, et le propriétaire
 d'un fichier qui s'y trouve ont le droit de supprimer ce fichier.
 C'est typiquement utilisé pour les répertoires comme /tmp ayant une autorisatio
n d'écriture générale.
\layout Description

u les permissions dont dispose actuellement le pro­ priétaire du fichier,
\layout Description

g les permissions dont disposent actuellement les autres membres du groupe
 propriétaire du fichier,
\layout Description

o les permissions dont disposent tous les autres utilisateurs.
\layout Standard

Une valeur numérique pour le mode est constituée de 1 à 4 chiffres en octal
 (0 a 7), calculés en additionnant les bits de valeurs 4, 2, et 1.
 Un bit non mentionné étant considéré comme nul.
 Le premier chiffre correspond aux attributs Set-UID (4), Set-GID (2), et
 conservation du code en mémoire [`stickyi bit'] (1).
 Le second chiffre correspond aux autorisations de lecture (4), écriture
 (2) et exécution pour l'utilisateur propriétaire du fichier.
 Le troisième et le quatrième chiffres correspondent respectivement aux
 autorisations d'accès pour les membres du groupe du fichier, et pour les
 autres utilisateurs.
\layout Standard

chmod ne modifie jamais les autorisations d'accès des liens symboliques,
 l'appel système chmod(2) ne peut pas les modifier.
 Ceci n'est pas un problème puisque ces autorisations ne sont jamais prises
 en compte.
 En fait, chmod modifie les autorisations d'accès du fichier cible du lien
 symbolique à condition que le lien soit explicite­ ment mentionné sur la
 ligne de commande.
 Par contre chmod ignore purement et simplement les liens symboliques qu'il
 rencontre lors des descentes récursives de répertoires.
\layout Standard

On note qu'Uunix vérifie les droits en commençant dabord par le propriétaire.
\layout Standard

Si pour un objet, le propriétaire ne possède plus aucun droit, et les autres
 oui, le propriétaire ne peut plus accèder à son fichier.
 Unix ne vérifie pas ce type d'incohérence.
\layout Standard

Exemples :
\layout LyX-Code

$ chmod o-r toto
\layout Standard

Retire le droit de lecture pour les autres utilisateurs sur le fichier toto.
 $ chmod ug+w toto
\layout Standard

Ajoute le droit décriture pour le propriétaire et le groupe.
 $ chmod -rwx toto
\layout Standard

Enlève tous les droits pour tout le monde
\layout LyX-Code

$ chmod +r toto
\layout Standard

Positionne pour tout le monde uniquement le droit en lecture.
 $ chmod u=rw ,go-rwx toto
\layout Standard

Positionne les droits de lecture/écriture pour le propriétaire, et retire
 tous les droits pour le groupe et les autres.
\layout Standard

Attention : la commande umask peut générer des interférences dexécution
 avec le chmod.
\layout Subsubsection

Copier un fichier
\layout Standard

Unix permet de dupliquer un fichier et copier un ou plusieurs fichiers vers
 un répertoire.
\layout Standard

La commande cp (copy) possède donc deux syntaxes : 
\layout LyX-Code

$ cp fichierl fichier2
\layout Standard

Copie le fichierl dans le fichier2, les deux fichiers sont identiques.
 
\layout LyX-Code

$ cp fichierl ...
 fichierN répertoire
\layout Standard

Copie les fichiers 1 à N vers le répertoire répertoire.
 Les fichiers possèdent alors le
\layout Standard

même nom relatif
\layout Standard

Il est possible de spécifier des chemins pour chaque nom (chemin relatifs
 ou absolus).
 L'option -R permet de recopier une arborescence.
\layout Quote

$ cp -[yR] répertoirel répertoire2
\layout Standard

Noter que pour copier vers un répertoire, lutilisateur doit posséder les
 droits décriture sur ce répertoire.
\layout Subsection

Renommer/Déplacer un fichier
\layout Standard

La commande mv (move) peut être utilisé de deux manières (exactement comme
 la commande copie).
\layout Standard

Pour renommer un fichier, dans ce cas le fichier destination reste dans
 le même répertoire.
\layout LyX-Code

$ mv toto titi
\layout LyX-Code

$ mv essai toto
\layout Standard

Pour déplacer un fichier (ou plusieurs fichiers), dans ce cas les fichiers
 destinations sont placés dans un répertoire différent.
\layout LyX-Code

$ mv toto titi/tmp
\layout Standard

II est aussi possible de déplacer un objet en le renommant :
\layout LyX-Code

$ mv toto /tmp/titi
\layout Subsection

Détruire un fichier
\layout Standard

La commande rm (remove) permet deffacer un ou plusieurs fichiers.
\layout LyX-Code

$ rm toto
\layout LyX-Code

$ rm essai essai2
\layout Standard

Les fichiers toto essai essai2 du répertoire courant sont détroits (il faut
 avoir le droit .
 décriture dans le répertoire).
\layout Standard

rm admet des options très utiles comme -f pour forcer la destruction, ne
 pas tenir compte des droits, -i pour confirmer la destruction, et enfin
 -r pour détruire récursivement un répertoire.
\layout LyX-Code

$ rm -r users/ens
\layout Section

Les jokers
\layout Standard

Lesjokers ou métacaractères sont des caractères qui ont une signification
 particulière.
\layout Subsection

Le caractère *
\layout Standard

Le caractère * représente un nombre quelconque (éventuellement aucun) de
 caractère quelconque.
\layout Standard

Par exemples :
\layout Standard

a*c = abc abcd abc.c 
\layout Standard

*i* = titi avion üüüüü
\layout Subsection

Le caractère ?
\layout Standard

Le caractère ? représente un caractère (et un seul) quelconque.
\layout Standard

Par exemple :
\layout Standard

a?? représente tous les noms commencant par a et suivit d'exactement deux
 caractères
\layout Standard

?a* identifie tous les noms ayant en deuxième caractère un a
\layout Subsection

Les caractères [ et ]
\layout Standard

Le caractère [ commence une définition d'ensemble qui se termine par le
 caractère ).
\layout Standard

Tous les caractères qui sont placés entre les crochets (écrits sans espaces)
 définissent lensemble des caractères possibles.
\layout Standard

On peut aussi définir un intervalle en séparant les caractères par le -.
\layout Standard

Exemples :
\layout Standard

a[bc]d = abd acd
\layout Standard

a[0-9] représente tous les tichiers commencant par a suivi d'un chiftre
\layout Section

Gérer les processus
\layout Standard

Un processus est limage mémoire (appelé aussi instance) d'un programme disque
 s'exécutant en mémoire.
\layout Standard

Unix étant mutli-tâches, plusieurs processus sont donc exécutés simultanément
 en mémoire.
\layout Subsection

Les processus en exécution
\layout Standard

Il est possible d'observer les processus en activité à un moment donné grâce
 à la commande ps (processus status).
\layout Standard

ps foumit pour chaque processus un certain nombre dinformations dont les
 plus importantes sont le numéro du processus (pid) et le nom du processus.
\layout Standard

De plus ps fournit des options telles que :
\layout Standard

Les arguments de la ligne de commande peuvent être précédés par un '-',
 mais ce n'est pas indispensable.
 
\layout Description

l affichage long 
\layout Description

u (utilisateur) présente le nom de l'utilisateur et l'heure de lancement.
 
\layout Description

j (job) présente les Pgid et Sid.
 
\layout Description

s (signal) présente les signaux bloqués, ignorés et interceptés.
\layout Description

v (vm) affiche des informations sur la mémoire virtuelle.
 
\layout Description

m (mémoire) affiche des informations sur l'occupation mémoire.
 A combiner avec l'option p pour obtenir les nombres de pages.
 
\layout Description

f (forêt) affiche les arbres généalogiques des proces­ sus.
 
\layout Description

a (autres) présente également les processus des autres utilisateurs.
 
\layout Description

x affiche les processus qui n'ont pas de terminal de contrôle.
 
\layout Description

S additionner les temps CPU et les fautes de pagination des processus fils.
 
\layout Description

c (commande) afficher le nom de la commande exécutée.
 
\layout Description

e (environnement) présente l'environnement à la suite de la ligne de commande
 exécutée.
 
\layout Description

w (wide) affichage large.
 Ne coupe pas les informations pour les limiter à une seule ligne.
 Pour être exact, chaque `w' autorise une ligne supplémentaire pour chaque
 processus.
 Si la ligne supplémentaire n'est pas nécéssaire, elle n'est pas utilisée.
 Il peut y avoir jusqu'à 100 w.
\layout Description

h ne pas afficher d'en-tête.
 r ne présenter que les processus en exécution (run­ ning).
 
\layout Description

n Affichage numérique des champs USER et WCHAN.
\layout Description

txx ne présenter que les processus contrôlés par le ter­ minal xx, ou xx
 représente soit le nom du términal tel qu'il est mentionné dans le répertoire
 "/dev", soit son nom sans les suffixes tty ou cu.
 Il s'agit de l'heuristique inverse de celle utilisée par ps pour afficher
 les noms abrégés dans le champs TTY.
 Ex : ps -t1.
\layout LyX-Code

$ ps
\layout Standard

Liste les processus lancés par lutilisateur.
 
\layout LyX-Code

$ps -axl
\layout Standard

Demande l'affichage de tous les processus en exécution.
\layout Standard

Remarque : l'exécution dune commande depuis le Shell génère la création
 d'un processus, ce nest pas le Shell qui exécute la commande.
 Le Shell se contente de créer un processus qui exécutera la commande à
 sa place.
 Pendant le temps dexécution le Shell attend sans rien faire (jusquà.la fin
 de son fils).
\layout Subsection

Terminer un processus
\layout Standard

En temps normal, lorsqun processus est lancé, il sarrête avec la fin de
 son exécution.
 II se termine alors normalement.
\layout Standard

Cependant, il arrive quon désire interrompre un processus avant sa fin pour
 diverses raisons.
\layout Standard

Un premier moyen est dinterrompre le processus par ^C (appui des touches
 [Ctrl] et
\layout Standard

Cependant, ^C nest pas toujours efficace, surtout pour des processus lancés
 an arrière plan (cf.
 Lancer un processus en arrière plan).
\layout Standard

Unix propose la commande kill pour tuer un processus, cest à dire le terminer
 prématurément.
\layout Standard

kill admet comme paramètre le ou les numéros des processus (pid).
\layout LyX-Code

$ kill 627 2010
\layout Standard

Les processus ayant les pid 627 et 2010 sont tués.
\layout Standard

kill admet une option correspondant à des signaux de -1 à -15.
\layout Standard

Mais nous n'aborderons pas ce détail pour nous souvenir uniquement de loption
 -9 qui permet de tuer un processus efficacement.
\layout LyX-Code

$ kill -9 627
\layout Standard

Tue le processus sur un signal non masquable (à réserver aux processus de
 type interactif comme le Shell).
\layout Subsection

Les autres utilisateurs
\layout Standard

Nous avons dit qu'Unix était un système multi-utilisateurs, il est intéressant
 de connaître les possiblités offertes par le système pour échanger de linformat
ion entre les utilisateurs.
\layout Subsubsection

Qui suis-je ?
\layout Standard

Vous êtes connus du système par votre nom dutilisateur.
 Demandez donc lui sil vous connaît réellement ?
\layout Standard

$ who am i 
\layout Standard

$ whoami
\layout Standard

Ces commandes renvoient à lutilisateur son nom de login.
 Déterminer la différence entre les deux commandes.
\layout Subsubsection

Les utilisateurs connectés
\layout Standard

Il est parfois utile de connaître les utilisateurs qui sont connectés en
 même temps que vous...
\layout Standard

Pour leur adresser un message de bienvenue par exemple !
\layout Standard

Unix vous offre la commande who qui fournit simplement les noms et les terminaux
 de login, et la commande finger, plus sophistiquée, donnant le nom réel
 de lutilisateur.
\layout LyX-Code

$ who 
\layout LyX-Code

$ finger 
\layout LyX-Code

$ users
\layout Standard

Remarque : il existe aussi la commande w qui est un mélange du who et du
 finger.
\layout Subsubsection

Envoyer un message en direct
\layout Standard

A présent que vous savez quelles sont les personnes connectées sur le système,
 envoyez leur donc un petit message !
\layout Standard

Lenvoi dun message seffectue par la commande write suivi du nom de lutilisateur
 (nom de login) et suivi du caractère [Return].
\layout Standard

Ensuite rédigez votre message terminé par les touches [Ctrl] et [d] (^D
 représente le [Ctrlj [d]).
\layout Standard

$ write unix
\layout Standard

Bonjour unix, je suis un ami.
 ^D
\layout Standard

$
\layout Standard

$ write u1 Bonjour u1 Je suis unix ^D
\layout Standard

$ A certain moment, vous ne désirez pas être ennuyé par ces messages qui
 arrivent intempestivement.
\layout Standard

Utilisez la commande mesg pour autoriser ou interdire la réception de messages.
 Cette commande exécute un chmod sur le fichier périphérique associé à notre
 terminal (on peut le vérifier en exécutant un Is -I sur le terminal placé
 dans le répertoire /dev).
\layout Standard

$ mesg y
\layout Standard

Autorise la réception de messages.
 Votre terminal est accessible.
 $ mesg n
\layout Standard

Interdit laccès de votre terminal aux autres utilisateurs.
 Les tentatives denvoi de messages sont vouées à léchec.
\layout Standard

« write : permission denied «\SpecialChar ~
 
\layout Standard

$ mesg
\layout Standard

Affiche létat de votre terminal.
 Accessible ou non.
\layout Standard

La commande finger spécifie les utilisateurs se trouvant en mesg n en plaçant
 une étoile devant le terminal.
\layout Standard

Remarque : il existe une commande plus facile dutilisation : talk.
 Celle-ci découpe lécran en deux zones : une zone dans laquelle vous tapez
 vos messages, une autre où vous recevez les messages de votre correspondant.
 Il faut pour cela ouvrir une session interactive (les deux utilisateurs
 tous les deux en talk).
\layout Subsubsection

Le courrier
\layout Standard

write permet denvoyer un message à un utilisateur à condition que celui-ci
 soit connecté.
\layout Standard

Ceci est gënant lorsque la personne à qui lon veut écrire est absente.
\layout Standard

Unix a prévu un système de boîte aux lettres pour remédier à ce petit inconvénie
nt.
 Cest le mail.
\layout Standard

mail fonctionne comme le write excepté que la personne nest prévenue que
 lors du prochain login par le message :
\layout Standard

You have mail.
\layout Standard

Pour envoyer un courier.
 $ mail Unix
\layout Standard

Tu es absent, mais je tenvoie un courrier.
 ^D
\layout Standard

EOT mail send to Unix $
\layout Standard

Le texte est envoyé de la même manière que pour write.
 Sur la fin du message, le système confirme lenvoi du courrier.
\layout Standard

Pour lire son coursier.
\layout Standard

Le courrier reçu nest jamais détruit, cest à lutilisateur de nettoyer son
 courrier selon limportance des messages.
\layout Quote

$ mail
\layout Standard

Permet daccéder au courrier.
\layout Standard

Le message No mail saii~che si lutilisateur na aucun courrier.
 Dans le cas contraire, il pourra entrer :
\layout List
\labelwidthstring 00.00.0000

p pour lire le message courant.
\layout List
\labelwidthstring 00.00.0000

s suivi dun nom de fichier pour enregistrer le message dans le fichier.
 Si aucun nom nest spécifié, le fichier par défaut est le fichier mbox.
 d pour détruire le message lu.
\layout List
\labelwidthstring 00.00.0000

n pour passer au message suivant.
\layout List
\labelwidthstring 00.00.0000

x pour sortir de la messagerie en abandonnant les modifications.
 q pour sortir en conservant les modifications.
\the_end
