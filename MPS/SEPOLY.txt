I - FONCTION D'UN SYSTEME D'EXPLOITATION
A/ .Objectifs
Le système d'exploitation d'un ordinateur est un ensemble de logiciels permettant de faire fonctionner tous les éléments internes du matériel (HARDWARE) et de commander des éléments externes à la machine.
Un certain nombre d'outils optimisent l'utilisation des possibilités machines et l'utilisation des ressources.
Définition Les ressources sont l' ensemble des matériels, des informations, des programmes disponibles dans l'environnement de la machine.
Hypothèse Le cours se place dans un environnement multi-utilisateur.
B/,Fonctions élémentaires
a) Gestion des informations
Définition Les informations . ensemble des données manipulées par les programmes.
Fonction d'un systène d'exploitatian Page 7
La couche~la plus externe correspond à l'utilisateur. couche 0 La machine physique sans logiciel couche 1 Le noyau .
Fonctions d'attribution de l'unité centrale, d'utilisation des primitives de synchronisation, de gestion des interruptions.
couche 2 Utilisation de la mémoire centrale fonctions d'allocations, de libérations. couche 3 Gestion des processus .
Fonctions de création, destruction, de communication entre processus.
couche 4 Gestion des entrées-sorties . E/S (Imput output . I/0), Elle contient le superviseur d'entrées-sorties et le gérant des périphériques.
Couche 5 Gestion de l'information elle comprend le système de gestion des Fichiers (SGF) et gère les entrées-sorties logiques.
D/ Processus
L'utilisateur crée des programmes qui sont des suites d'instructions que la machine exécute.
Le processeur ne voit que le code exécutable du programme. C'est une longue suite de 0 et de 1 logique qui structurée en mots machine, en général l'octet ou ses multiples.
Un processus représente l'exécution d'un programme (instructions et données) ; c'est une entité dynamique. L'ensemble code + données est géré par le système d'exploitation pour identifier le propriétaire, les droits et les ressources nécessaires au processus. Les informations relatives 
à la description du processus sont contenues dans les tables systèmes.
Fonction d'un systèrne d'exploitatian Page 8
Un processus est parfaitement identifié par la réunion des trois informations .
La carte d'identité du processus
Le code du processus
Les données du processus
Implantation mémoire
II - ASPECTS DE LA CONCEPTION D'UN SYSTEME D'EXPLOITATION
Le système d'exploitation utilise du temps machine (temps CPU computer processeur unit) au détriment de l'application et de la place.
Lors de la conception, on cherche à minimiser ces deux paramètres
"over head time" "over head place"
D'o~ une optimisation du système d'exploitation en fonction des modes .
- temps réel,
- transactionnel,
- développement.
A/ Modularité
On définit des fonctions bien spécifiques avec des interfaces. Cela renforce la sécurité (erreur limitée à un module) mais l'efficacité est moins bonne. "over head" plus élevée.
Aspects de Ia conception d'un sYstèrr~e d'exploitation Page 11
B/ FRIMITIVES
Deux modes de fonctionnement .
Mode maître (ou mode système) dans ce mode l'utilisateur privilégié à accès à toutes les ressources de la machine et à toutes les commandes. Le mode de fonctionnement en permanent est destiné à l'administrateur.
Mode uti- n'offre qu'une vision partielle de lisateur l'environnement. Les ressources et les
commandes ne sont qu'un sous ensemble des possibilités du mode maître.
Les accès sont contrôlés par les droits accordés à l'utilisateur.
Les primitives sont des ordres qui nécessitent le passage du processeur du mode utilisateur au mode maître avec les protections nécessaires. Elles sont traitées par la couche noyau.
Aspects de la conception d'un systérne d'exploitation Page 14
1) INTERPRETEUR
I1 analyse commande par commande les ordres à exécuter et effectue éventuellement des diagnostics d'erreurs, erreur dans la commande ou erreur dans l'exécution du processus.
2,)~LES.TRADUCTEURS
Leur fonction est de transformer les programmes sources .
- pour que les noms symboliques soient convertls en adresses dans la mémoire centrale pour l'exécution.
- pour que les commandes de l'utilisateurs soient traduites en codes machines compréhensibles du processeur.
- vérification de la cohérence des informations. (Nom symbolique. nom référencée etc...).
Lorsque le source est écrit en langage d'assemblage (langage près de la machine) le traducteur est appelé assembleur.
Lorsque le source est écrit en langage évolué (PASCAL, COBOL, C, ADA...) le traducteur est appelé compilateur.
juin 1989
Aspects de la conception d'un systàne d'exploitation Page 15
a) Méthode générale du travail d'un assembleur
- Texte source écrit dans un fichier
ler passage - Analyse du syntaxique du texte source et émission des erreurs éventuelles.
- Gestion du compteur d'adresses.
- Correspondance nom symbolique adresse (appelée table des symboles)
- Conversion des mémomniques en code binaire.
- Identification des lignes incomplètes - Gestion des erreurs
2ème passage - Renseigne les adresses manquantes des lignes incomplètes en utilisant la table des symboles.
- Création d'un listing d'assemblage.
b) Calcul des adresses
1. Référence en avant
L'examen progressif des lignes ne permet pas de trouver les adresses pour les symboles utilisés après la ligne en examen. Dans notre exemple la valeur de l'adresse TAB ne pourra être informée à la ligne désignée par l'étiquette SUiTE mais à l'examen de 5 lignes après.
2. Référence externe
Le texte source peut contenir des modules désignés de façon externe au programme source.
3. Adresses translatables
Les adresses sont calculées en relatif à partir de la première instruction.
jm.n 1989
Aspects de Ia conception à'c,m systdme d'exploitation Page 16
c) Fonctions d~e traduction de l'assembleur
L'assembleur doit permettre aux deux modules Editeurs de liens et chargeur de terminer les opérations pour cela il fournit un fichier objet contenant .
- Le code
- La longueur du code
- L'adresse de la première instruction exécutable
- La liste des références externes
- La liste des points d'entrée.
d) Editeurs de liens
~.:- L'éditeur de lien va résoudre les adresses incomplètes du ' _ Code fourni par l'assembleur à l'aide des informations '~4' qui lui sont transmises (Références externes).
A partir de ce fichier objets, il crée un fichier résultat contenant tous les codes mises en oeuvre. Ce fichier porte le nom d'Image Mémoire Translatable.
e) Chargeur
Le rôle du chargeur est de .
. lire le fichier généré par l'éditeur de lien
. définir l'adresse d'implantation en mémoire centrale
. calculer l'adresse définitive pour les adresses translatables
. Charger le compteur ordinal à l'adresse de la première instruction exécutable.
juin 1989
Aspects de Ia conception d'cm systdme d'exploitatian Page 17
f) En conclusion
- Utilisation de mémomniques d'assembleur - Utilisation de directives d'assemblage
- Utilisation de directives d'éditeur de liens. Pour définir les bibliothèques, les adresses éventuellement les structures de fonctionnement, 1 structure de recouvrement (overlays). Le programme définit les parties qui seront effectivement en mémoi centrale lorsque la taille de la MC ne permet pas chargement de tout le programme.
N DATA 10 Directive d'assemblage LDX N Mémonique assembleur DEX
LDA #5 SUITE STA TAB.X DEX CPX #-1 BNE SUITE HLT
TAB RES 10 FIN EXT
3) Mise au point d'un programme
Mise au point d'un programme
Voir fz9'
Mise au point d'un programme
juin 1989
Aspects de la conception d'un système d'exploitation Page 19
4) Utilitairès offerts par le système d'exploitation
Les utilitaires ont pour objectifs de "faciliter" 1 développement et la recherche d'erreurs aux utilisateurs. Ils permettent la surveillance et la vision d déroulement interne du programme. Ces outils sont appelé deboggeurs (vient de l'anglais debugger)
point d'arrêt dans le code, - Exécution pas à pas,
- visualiser (=lister) les zones mémoires et/ou e . modifier le contenu,
- lancer l'exécution à partir de n'importe quell~ instruction
Plus ou moins perfectionnés, les déboggeurs symbolique~ utilisent les fichiers sources et fichiers fournis par 1~ traducteur et éditeur de liens pour créer une vision dt déroulement du programme du même niveau que celui dt source.
Les outils de bases sont . - le désassembleur,
la visualisation d'une partie de mémoire, d fichiers "Dump",
- outils de modification,
- Editeur de texte,
juin 1989
III - PARALLELISME
A/ Exécution sequentielle d'un.programme
La machine de base est constitué d'une mémoire adressable, qui contient les instructions et les données d'un programme, ~t d'un processeur qui interprète les instructions.
Par hypothèse les instructions du programme ne sont pas modifiées au cours de l'exécution.
Le processeur exécute les instructions en séquences l'une après l'autre, en continuité logique. Il ne se consacre qu'à un seul traitement.
B/ Notion d'interruption
Programme courant temps
évènement externe programme d'interruption =
> commutation
Notion d'interruption
P'i g 5
Un évènement externe envoie un signal au processeur. Ce signal provoque le changement d'état d'un indicateur consulté au cours de chaque instruction. Il peut provenir d'un autre processeur, d'un dispositif d'entrée/sortie, de l'appel opérateur et plus généralement de tout processus physique externe au processeur interrompu.
Une interruption permet donc de forcer un processeur à suspendre dès le premier point interruptible, l'exécution du programme en cours pour exécuter un programme prédéfini, vprogramme de traitement de l'interruption (interrupt Handler)
Le processeur peut être interrompu pour diverses causes, demandant l'exécution de programmes d'interruption différents.
juin 19f~9*
Pour distinguer les causes, deux schémas de base sont utilisés .
- Un indicateur unique pour toutes les interruptions et une information contenue dans un mot d'état ou mémoire identifiant la cause. Le programme d'interruption consulte cette information pour déterminer l'origine de l'interruption et dérouler la procédure particulière.
- Un indicateu~ distinct pour chaque interruption . on parle alors de niveaux d'interruption. A chaque niveau correspond un traitement particulier. Lorsqu'il existe plusieurs niveaux d'interruption, le conflit entre deux interruptions apparaissant en même temps est réglé par l'attribution d'un ordre de priorité. Cet ordre est fixé une fois pour toutes.
1) Les..çatégories d'interruptions .
a) Les interruptions non masquable (NMI)
La prise en compte est immédiate et l'interruption du programme aura lieu dès que possible.
b) Les interruptions masquables (IRQ) interrupt request
La prise en compte peut être immédiate mais l'interruption du programme n'est possible que lorsque le mot d'état en valide l'autorisation.
Ce mode permet le déroulement d'une séquence ininterruptible.
c) Interruption logiciel (SWI) Sofware interrupt
, Ce déclenchement, programmé à partir d'une instruction
simule une cause externe. Utilisation en développement de programme.
juin 1989

